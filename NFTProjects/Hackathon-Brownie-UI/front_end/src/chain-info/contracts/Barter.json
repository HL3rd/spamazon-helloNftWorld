{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_itemValue",
          "type": "uint256"
        }
      ],
      "name": "collateralizedPurchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "emergencyExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "exchangeNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "handleDefault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanTracker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOwed",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "sellerCollateralNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "totalValueBorrowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "valueBorrowedOneNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "1": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "2": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol",
    "3": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "4": "contracts/Barter.sol",
    "5": "contracts/Math.sol"
  },
  "ast": {
    "absolutePath": "contracts/Barter.sol",
    "exportedSymbols": {
      "Barter": [
        414
      ],
      "IERC165": [
        722
      ],
      "IERC20": [
        492
      ],
      "IERC721": [
        608
      ],
      "IERC721Receiver": [
        626
      ],
      "Math": [
        710
      ]
    },
    "id": 415,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 415,
        "sourceUnit": 609,
        "src": "57:58:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 415,
        "sourceUnit": 493,
        "src": "116:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 415,
        "sourceUnit": 627,
        "src": "173:66:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Math.sol",
        "file": "./Math.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 415,
        "sourceUnit": 711,
        "src": "240:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 626,
              "src": "281:15:4"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "281:15:4"
          }
        ],
        "canonicalName": "Barter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 414,
        "linearizedBaseContracts": [
          414,
          626
        ],
        "name": "Barter",
        "nameLocation": "271:6:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10,
            "libraryName": {
              "id": 8,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 710,
              "src": "309:4:4"
            },
            "nodeType": "UsingForDirective",
            "src": "303:23:4",
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Barter.userBorrow",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "amountOwed",
                "nameLocation": "438:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "430:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "466:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "458:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "489:6:4",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "481:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 15,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "481:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "userBorrow",
            "nameLocation": "409:10:4",
            "nodeType": "StructDefinition",
            "scope": 414,
            "src": "402:100:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "totalborrowedETH",
            "nameLocation": "536:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "508:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "516:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "508:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "946ccfc0",
            "id": 30,
            "mutability": "mutable",
            "name": "loanTracker",
            "nameLocation": "731:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "645:97:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow)))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "645:70:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow)))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "672:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "664:50:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow))"
                },
                "valueType": {
                  "id": 27,
                  "keyType": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "683:30:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                    "typeString": "mapping(uint256 => struct Barter.userBorrow)"
                  },
                  "valueType": {
                    "id": 26,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25,
                      "name": "userBorrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17,
                      "src": "702:10:4"
                    },
                    "referencedDeclaration": 17,
                    "src": "702:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_userBorrow_$17_storage_ptr",
                      "typeString": "struct Barter.userBorrow"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ad5c4648",
            "id": 33,
            "mutability": "constant",
            "name": "WETH",
            "nameLocation": "819:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "795:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "795:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "826:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "883:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "875:13:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "875:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "909:35:4",
              "statements": [
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "919:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "927:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "927:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "919:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "919:18:4"
                }
              ]
            },
            "id": 44,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:2:4"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:4"
            },
            "scope": 414,
            "src": "895:49:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "1245:81:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1293:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1301:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1310:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 57,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1263:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 56,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "1255:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$608_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1255:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$608",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 551,
                      "src": "1255:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:64:4"
                }
              ]
            },
            "documentation": {
              "id": 45,
              "nodeType": "StructuredDocumentation",
              "src": "950:152:4",
              "text": "@notice function transfers ownership from buyer to seller\n@dev the calling contract/function must approve the transfer to the seller's address"
            },
            "functionSelector": "0b1eedb8",
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeNFT",
            "nameLocation": "1116:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "1145:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1137:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "1169:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1161:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "1194:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1186:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1223:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1215:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1127:110:4"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:4"
            },
            "scope": 414,
            "src": "1107:219:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1927:637:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 80,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2040:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 82,
                            "indexExpression": {
                              "id": 81,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "2052:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2040:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 84,
                          "indexExpression": {
                            "id": 83,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2060:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2040:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 86,
                        "indexExpression": {
                          "id": 85,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "2073:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2040:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2040:49:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 88,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2093:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2040:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 104,
                  "nodeType": "IfStatement",
                  "src": "2036:158:4",
                  "trueBody": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "2102:92:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 91,
                                        "name": "loanTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "2124:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                          "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                        }
                                      },
                                      "id": 93,
                                      "indexExpression": {
                                        "id": 92,
                                        "name": "_buyer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69,
                                        "src": "2136:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2124:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                      }
                                    },
                                    "id": 95,
                                    "indexExpression": {
                                      "id": 94,
                                      "name": "_collection",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73,
                                      "src": "2144:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2124:32:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                                      "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                    }
                                  },
                                  "id": 97,
                                  "indexExpression": {
                                    "id": 96,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 75,
                                    "src": "2157:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2124:42:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                                    "typeString": "struct Barter.userBorrow storage ref"
                                  }
                                },
                                "id": 98,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountOwed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12,
                                "src": "2124:53:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2181:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2124:58:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 90,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2116:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2116:67:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "2116:67:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 109,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "2242:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 112,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2258:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$414",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$414",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2250:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2250:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2250:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 114,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "2265:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 106,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2212:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 105,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "2204:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$608_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2204:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$608",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 551,
                      "src": "2204:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:70:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:70:4"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 117,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2285:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 121,
                            "indexExpression": {
                              "id": 118,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "2297:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2285:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 122,
                          "indexExpression": {
                            "id": 119,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2305:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2285:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "id": 120,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "2318:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2285:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2285:53:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_itemValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2342:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2285:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2285:67:4"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 128,
                        "name": "totalborrowedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2362:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "id": 129,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "2379:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2362:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 131,
                      "name": "_itemValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2390:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2362:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2362:38:4"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 134,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2410:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 138,
                            "indexExpression": {
                              "id": 135,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "2422:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2410:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 139,
                          "indexExpression": {
                            "id": 136,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2430:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2410:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 137,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "2443:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2410:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2410:49:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2462:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2410:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2410:59:4"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 145,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2500:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 149,
                            "indexExpression": {
                              "id": 146,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "2512:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2500:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 150,
                          "indexExpression": {
                            "id": 147,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2520:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2500:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 151,
                        "indexExpression": {
                          "id": 148,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "2533:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2500:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2500:48:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "_buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2551:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2500:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:57:4"
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "1332:279:4",
              "text": "@notice function transfers ownership from buyer to this contract to be held as collateral\n@notice buyer will automaticall receive thier NFT back once they repay the item value\n@dev the calling contract/function must approve the transfer to this contract address"
            },
            "functionSelector": "617a19c0",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralizedPurchase",
            "nameLocation": "1759:22:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "1799:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1791:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "1823:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1815:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "1848:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1840:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1877:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1869:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_itemValue",
                  "nameLocation": "1903:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1895:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1781:138:4"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:0:4"
            },
            "scope": 414,
            "src": "1750:814:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "2835:1108:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 172,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3017:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3017:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 169,
                                  "name": "WETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "3001:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 168,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 492,
                                "src": "2994:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2994:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 431,
                            "src": "2994:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2994:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 175,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "3032:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2994:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f756768205745544820746f207265706179",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3053:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177c1e54ca3e518431235dfa7be3287196bc96d70b49d2cdb5578862ba10c1c0",
                          "typeString": "literal_string \"not enough WETH to repay\""
                        },
                        "value": "not enough WETH to repay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_177c1e54ca3e518431235dfa7be3287196bc96d70b49d2cdb5578862ba10c1c0",
                          "typeString": "literal_string \"not enough WETH to repay\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2973:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:116:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:116:4"
                },
                {
                  "documentation": "could use address _buyer",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 181,
                                  "name": "loanTracker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "3156:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                  }
                                },
                                "id": 184,
                                "indexExpression": {
                                  "expression": {
                                    "id": 182,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3168:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3168:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3156:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                }
                              },
                              "id": 186,
                              "indexExpression": {
                                "id": 185,
                                "name": "_collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 160,
                                "src": "3180:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3156:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                                "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                              }
                            },
                            "id": 188,
                            "indexExpression": {
                              "id": 187,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "3193:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3156:46:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                              "typeString": "struct Barter.userBorrow storage ref"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOwed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "3156:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 190,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "3233:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3156:84:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f7765",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3254:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcaf546af5b5471811c5e526c5feaac590764e6627cf45296a5573ada6e868b7",
                          "typeString": "literal_string \"Cannot pay back more than you owe\""
                        },
                        "value": "Cannot pay back more than you owe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcaf546af5b5471811c5e526c5feaac590764e6627cf45296a5573ada6e868b7",
                          "typeString": "literal_string \"Cannot pay back more than you owe\""
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3135:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3135:164:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:164:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 199,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3349:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3349:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 201,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "3374:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 204,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 202,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3386:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 203,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3386:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3374:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 206,
                                "indexExpression": {
                                  "id": 205,
                                  "name": "_collection",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "3398:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3374:36:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 208,
                              "indexExpression": {
                                "id": 207,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 162,
                                "src": "3411:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3374:46:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "3374:53:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 210,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3373:55:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 211,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "3442:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 196,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3317:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 195,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 492,
                          "src": "3310:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3310:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 473,
                      "src": "3310:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3310:149:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:149:4"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 214,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "3470:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 219,
                            "indexExpression": {
                              "expression": {
                                "id": 215,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3482:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3482:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3470:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "id": 217,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "3494:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3470:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "id": 218,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "3507:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3470:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "3470:57:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 223,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "3531:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3470:68:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:68:4"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 226,
                        "name": "totalborrowedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "3623:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "expression": {
                          "id": 227,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3640:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3640:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3623:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 230,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "3655:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3623:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:39:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 233,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "3712:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 236,
                            "indexExpression": {
                              "expression": {
                                "id": 234,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3724:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3724:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3712:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "id": 237,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "3736:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3712:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "id": 239,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "3749:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3712:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "3712:57:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3773:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3712:62:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 258,
                  "nodeType": "IfStatement",
                  "src": "3708:229:4",
                  "trueBody": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "3776:161:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 250,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3853:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Barter_$414",
                                    "typeString": "contract Barter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Barter_$414",
                                    "typeString": "contract Barter"
                                  }
                                ],
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3845:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 248,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3845:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3845:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 252,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3876:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3876:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 254,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "3904:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 245,
                                  "name": "_collection",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "3798:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 244,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "3790:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$608_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3790:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$608",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 551,
                            "src": "3790:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3790:136:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 256,
                        "nodeType": "ExpressionStatement",
                        "src": "3790:136:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 158,
              "nodeType": "StructuredDocumentation",
              "src": "2570:152:4",
              "text": "@notice buyer pays back what they owe in WETH only\n@dev the calling contract/function must approve the transfer of ERC20 to the seller address"
            },
            "functionSelector": "8cd2e0c7",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nameLocation": "2736:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "2759:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2751:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "2788:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2780:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2814:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2806:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2806:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2741:86:4"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2835:0:4"
            },
            "scope": 414,
            "src": "2727:1216:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "4151:336:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 276,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4220:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$414",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$414",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4212:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 274,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4212:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4212:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 278,
                                "name": "loanTracker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "4239:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                }
                              },
                              "id": 280,
                              "indexExpression": {
                                "id": 279,
                                "name": "_buyer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "4251:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4239:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                              }
                            },
                            "id": 282,
                            "indexExpression": {
                              "id": 281,
                              "name": "_collection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "4259:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4239:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                              "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                            }
                          },
                          "id": 284,
                          "indexExpression": {
                            "id": 283,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "4272:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4239:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                            "typeString": "struct Barter.userBorrow storage ref"
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "4239:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 286,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "4302:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 271,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "4169:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 270,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "4161:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$608_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4161:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$608",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 551,
                      "src": "4161:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:159:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:159:4"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 289,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "4330:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 293,
                            "indexExpression": {
                              "id": 290,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "4342:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4330:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 291,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "4350:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4330:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 295,
                        "indexExpression": {
                          "id": 292,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "4363:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4330:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "4330:53:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4386:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4330:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4330:57:4"
                }
              ]
            },
            "documentation": {
              "id": 261,
              "nodeType": "StructuredDocumentation",
              "src": "3949:82:4",
              "text": "@notice upon defualt, the store gets th NFT, and the user no longer owes money."
            },
            "functionSelector": "1e315fd6",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleDefault",
            "nameLocation": "4045:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "4076:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "4068:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4068:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "4100:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "4092:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4092:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "4129:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "4121:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4058:85:4"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4151:0:4"
            },
            "scope": 414,
            "src": "4036:451:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              625
            ],
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "4639:54:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 315,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4656:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Barter_$414",
                          "typeString": "contract Barter"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 320,
                      "src": "4656:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "4656:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 314,
                  "id": 318,
                  "nodeType": "Return",
                  "src": "4649:37:4"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "4502:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 311,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4613:8:4"
            },
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "4528:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "4545:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4545:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "4562:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4562:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "4579:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4579:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4518:79:4"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "4631:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4631:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4630:8:4"
            },
            "scope": 414,
            "src": "4493:200:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "4865:32:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "4888:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 329,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "4882:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "4882:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4882:8:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 328,
                  "id": 333,
                  "nodeType": "Return",
                  "src": "4875:15:4"
                }
              ]
            },
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minimum",
            "nameLocation": "4803:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "4819:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "4811:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4811:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "4830:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "4822:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4822:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4810:22:4"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "4856:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4856:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4855:9:4"
            },
            "scope": 414,
            "src": "4794:103:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "5038:48:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 343,
                      "name": "totalborrowedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5055:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 345,
                    "indexExpression": {
                      "id": 344,
                      "name": "_buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 338,
                      "src": "5072:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5055:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 342,
                  "id": 346,
                  "nodeType": "Return",
                  "src": "5048:31:4"
                }
              ]
            },
            "documentation": {
              "id": 336,
              "nodeType": "StructuredDocumentation",
              "src": "4903:56:4",
              "text": "@notice returns the total eth quantity owed by a user"
            },
            "functionSelector": "f2df757b",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalValueBorrowed",
            "nameLocation": "4973:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "5000:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "4992:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4991:16:4"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "5029:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:9:4"
            },
            "scope": 414,
            "src": "4964:122:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "5298:77:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 360,
                            "name": "loanTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "5315:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                            }
                          },
                          "id": 362,
                          "indexExpression": {
                            "id": 361,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "5327:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5315:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                          }
                        },
                        "id": 364,
                        "indexExpression": {
                          "id": 363,
                          "name": "_collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "5335:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5315:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                          "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                        }
                      },
                      "id": 366,
                      "indexExpression": {
                        "id": 365,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "5348:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5315:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                        "typeString": "struct Barter.userBorrow storage ref"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amountOwed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "5315:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 359,
                  "id": 368,
                  "nodeType": "Return",
                  "src": "5308:60:4"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "5092:57:4",
              "text": "@notice returns value owed on 1 NFT used as collateral"
            },
            "functionSelector": "9fed0300",
            "id": 370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueBorrowedOneNFT",
            "nameLocation": "5163:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "5200:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "5192:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5192:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "5224:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "5216:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "5253:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "5245:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5245:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5182:85:4"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "5289:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5289:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5288:9:4"
            },
            "scope": 414,
            "src": "5154:221:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "5595:73:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 382,
                            "name": "loanTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "5612:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                            }
                          },
                          "id": 384,
                          "indexExpression": {
                            "id": 383,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "5624:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5612:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                          }
                        },
                        "id": 386,
                        "indexExpression": {
                          "id": 385,
                          "name": "_collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "5632:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5612:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$17_storage_$",
                          "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                        }
                      },
                      "id": 388,
                      "indexExpression": {
                        "id": 387,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "5645:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5612:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userBorrow_$17_storage",
                        "typeString": "struct Barter.userBorrow storage ref"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16,
                    "src": "5612:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 381,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "5605:56:4"
                }
              ]
            },
            "documentation": {
              "id": 371,
              "nodeType": "StructuredDocumentation",
              "src": "5381:65:4",
              "text": "@notice returns address of seller who has an NFT as collateral"
            },
            "functionSelector": "3a1657b4",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerCollateralNFT",
            "nameLocation": "5460:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "5497:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "5489:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5489:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "5521:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "5513:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5513:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "5550:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "5542:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5542:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5479:85:4"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "5586:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5585:9:4"
            },
            "scope": 414,
            "src": "5451:217:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "5735:83:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 405,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5783:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$414",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$414",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5775:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5775:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5775:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 407,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5790:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5790:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 409,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "5802:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 400,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "5753:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 399,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "5745:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$608_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5745:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$608",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 551,
                      "src": "5745:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5745:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "5745:66:4"
                }
              ]
            },
            "functionSelector": "f61556c8",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyExit",
            "nameLocation": "5683:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "5705:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "5697:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5697:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "5718:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "5710:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5710:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5696:31:4"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5735:0:4"
            },
            "scope": 414,
            "src": "5674:144:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 415,
        "src": "262:5558:4",
        "usedErrors": []
      }
    ],
    "src": "32:5789:4"
  },
  "bytecode": "608060405234801561001057600080fd5b50600280546001600160a01b03191633179055610c1d806100326000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638cd2e0c7116100715780638cd2e0c714610182578063946ccfc0146101955780639fed030014610204578063ad5c464814610252578063f2df757b1461026d578063f61556c81461029657600080fd5b80630b1eedb8146100ae578063150b7a02146100c35780631e315fd6146100ff5780633a1657b414610112578063617a19c01461016f575b600080fd5b6100c16100bc3660046108f6565b6102a9565b005b6100e16100d1366004610957565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100c161010d366004610a33565b610311565b610157610120366004610a33565b6001600160a01b03928316600090815260016020908152604080832094861683529381528382209282529190915220600201541690565b6040516001600160a01b0390911681526020016100f6565b6100c161017d366004610a6f565b6103d5565b6100c1610190366004610ac4565b610579565b6101df6101a3366004610a33565b60016020818152600094855260408086208252938552838520905290835291208054918101546002909101546001600160a01b03918216911683565b604080519384526001600160a01b0392831660208501529116908201526060016100f6565b610244610212366004610a33565b6001600160a01b0392831660009081526001602090815260408083209490951682529283528381209181529152205490565b6040519081526020016100f6565b61015773c778417e063141139fce010982780140aa0cd5ab81565b61024461027b366004610af7565b6001600160a01b031660009081526020819052604090205490565b6100c16102a4366004610b19565b610874565b604051632142170760e11b81526001600160a01b038316906342842e0e906102d990879087908690600401610b43565b600060405180830381600087803b1580156102f357600080fd5b505af1158015610307573d6000803e3d6000fd5b5050505050505050565b6001600160a01b03838116600090815260016020908152604080832084871680855290835281842086855290925291829020600201549151632142170760e11b815290926342842e0e9261037092309291909116908690600401610b43565b600060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b505050506001600160a01b039283166000908152600160209081526040808320949095168252928352838120918152915290812055565b6001600160a01b03858116600090815260016020908152604080832087851684528252808320868452909152902060020154811690851614610449576001600160a01b0380861660009081526001602090815260408083209387168352928152828220858352905220541561044957600080fd5b604051632142170760e11b81526001600160a01b038416906342842e0e9061047990889030908790600401610b43565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b505050506001600160a01b0385811660009081526001602090815260408083209387168352928152828220858352905290812080548392906104ea908490610b7d565b90915550506001600160a01b03851660009081526020819052604081208054839290610517908490610b7d565b9091555050506001600160a01b03938416600081815260016020818152604080842096891684529581528583209483529390935292909220600281018054949095166001600160a01b0319948516179094559290920180549091169091179055565b6040516370a0823160e01b8152336004820152819073c778417e063141139fce010982780140aa0cd5ab906370a0823190602401602060405180830381865afa1580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190610b95565b10156106415760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f756768205745544820746f207265706179000000000000000060448201526064015b60405180910390fd5b3360009081526001602090815260408083206001600160a01b038716845282528083208584529091529020548111156106c65760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f776044820152606560f81b6064820152608401610638565b3360008181526001602090815260408083206001600160a01b038881168552908352818420878552909252918290206002015491516323b872dd60e01b815273c778417e063141139fce010982780140aa0cd5ab936323b872dd936107349391929116908690600401610b43565b6020604051808303816000875af1158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107779190610bae565b503360009081526001602090815260408083206001600160a01b03871684528252808320858452909152812080548392906107b3908490610bd0565b909155505033600090815260208190526040812080548392906107d7908490610bd0565b90915550503360009081526001602090815260408083206001600160a01b0387168452825280832085845290915290205461086f57604051632142170760e11b81526001600160a01b038416906342842e0e9061083c90309033908790600401610b43565b600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b505050505b505050565b604051632142170760e11b81526001600160a01b038316906342842e0e906108a490309033908690600401610b43565b600060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b505050505050565b80356001600160a01b03811681146108f157600080fd5b919050565b6000806000806080858703121561090c57600080fd5b610915856108da565b9350610923602086016108da565b9250610931604086016108da565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561096d57600080fd5b610976856108da565b9350610984602086016108da565b925060408501359150606085013567ffffffffffffffff808211156109a857600080fd5b818701915087601f8301126109bc57600080fd5b8135818111156109ce576109ce610941565b604051601f8201601f19908116603f011681019083821181831017156109f6576109f6610941565b816040528281528a6020848701011115610a0f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215610a4857600080fd5b610a51846108da565b9250610a5f602085016108da565b9150604084013590509250925092565b600080600080600060a08688031215610a8757600080fd5b610a90866108da565b9450610a9e602087016108da565b9350610aac604087016108da565b94979396509394606081013594506080013592915050565b600080600060608486031215610ad957600080fd5b610ae2846108da565b95602085013595506040909401359392505050565b600060208284031215610b0957600080fd5b610b12826108da565b9392505050565b60008060408385031215610b2c57600080fd5b610b35836108da565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b9057610b90610b67565b500190565b600060208284031215610ba757600080fd5b5051919050565b600060208284031215610bc057600080fd5b81518015158114610b1257600080fd5b600082821015610be257610be2610b67565b50039056fea2646970667358221220256838420d8887735673793f129968ef07193ad9e72839be0dcf6f07c209374f64736f6c634300080b0033",
  "bytecodeSha1": "2c794a35e5d748a45a96d51099c87290f73f5f3f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Barter",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "Barter.collateralizedPurchase": {
          "19": [
            2040,
            2100,
            false
          ],
          "20": [
            2124,
            2182,
            true
          ]
        },
        "Barter.repay": {
          "21": [
            2994,
            3039,
            true
          ],
          "22": [
            3156,
            3240,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "Barter.collateralizedPurchase": {
          "6": [
            2116,
            2183
          ],
          "7": [
            2204,
            2274
          ],
          "8": [
            2285,
            2352
          ],
          "9": [
            2362,
            2400
          ],
          "10": [
            2410,
            2469
          ],
          "11": [
            2500,
            2557
          ]
        },
        "Barter.emergencyExit": {
          "18": [
            5745,
            5811
          ]
        },
        "Barter.exchangeNFT": {
          "3": [
            1255,
            1319
          ]
        },
        "Barter.handleDefault": {
          "4": [
            4161,
            4320
          ],
          "5": [
            4330,
            4387
          ]
        },
        "Barter.repay": {
          "12": [
            2973,
            3089
          ],
          "13": [
            3135,
            3299
          ],
          "14": [
            3310,
            3459
          ],
          "15": [
            3470,
            3538
          ],
          "16": [
            3623,
            3662
          ],
          "17": [
            3790,
            3926
          ]
        },
        "Barter.sellerCollateralNFT": {
          "0": [
            5605,
            5661
          ]
        },
        "Barter.totalValueBorrowed": {
          "2": [
            5048,
            5079
          ]
        },
        "Barter.valueBorrowedOneNFT": {
          "1": [
            5308,
            5368
          ]
        }
      },
      "5": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Receiver",
    "Math"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638cd2e0c7116100715780638cd2e0c714610182578063946ccfc0146101955780639fed030014610204578063ad5c464814610252578063f2df757b1461026d578063f61556c81461029657600080fd5b80630b1eedb8146100ae578063150b7a02146100c35780631e315fd6146100ff5780633a1657b414610112578063617a19c01461016f575b600080fd5b6100c16100bc3660046108f6565b6102a9565b005b6100e16100d1366004610957565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100c161010d366004610a33565b610311565b610157610120366004610a33565b6001600160a01b03928316600090815260016020908152604080832094861683529381528382209282529190915220600201541690565b6040516001600160a01b0390911681526020016100f6565b6100c161017d366004610a6f565b6103d5565b6100c1610190366004610ac4565b610579565b6101df6101a3366004610a33565b60016020818152600094855260408086208252938552838520905290835291208054918101546002909101546001600160a01b03918216911683565b604080519384526001600160a01b0392831660208501529116908201526060016100f6565b610244610212366004610a33565b6001600160a01b0392831660009081526001602090815260408083209490951682529283528381209181529152205490565b6040519081526020016100f6565b61015773c778417e063141139fce010982780140aa0cd5ab81565b61024461027b366004610af7565b6001600160a01b031660009081526020819052604090205490565b6100c16102a4366004610b19565b610874565b604051632142170760e11b81526001600160a01b038316906342842e0e906102d990879087908690600401610b43565b600060405180830381600087803b1580156102f357600080fd5b505af1158015610307573d6000803e3d6000fd5b5050505050505050565b6001600160a01b03838116600090815260016020908152604080832084871680855290835281842086855290925291829020600201549151632142170760e11b815290926342842e0e9261037092309291909116908690600401610b43565b600060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b505050506001600160a01b039283166000908152600160209081526040808320949095168252928352838120918152915290812055565b6001600160a01b03858116600090815260016020908152604080832087851684528252808320868452909152902060020154811690851614610449576001600160a01b0380861660009081526001602090815260408083209387168352928152828220858352905220541561044957600080fd5b604051632142170760e11b81526001600160a01b038416906342842e0e9061047990889030908790600401610b43565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b505050506001600160a01b0385811660009081526001602090815260408083209387168352928152828220858352905290812080548392906104ea908490610b7d565b90915550506001600160a01b03851660009081526020819052604081208054839290610517908490610b7d565b9091555050506001600160a01b03938416600081815260016020818152604080842096891684529581528583209483529390935292909220600281018054949095166001600160a01b0319948516179094559290920180549091169091179055565b6040516370a0823160e01b8152336004820152819073c778417e063141139fce010982780140aa0cd5ab906370a0823190602401602060405180830381865afa1580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190610b95565b10156106415760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f756768205745544820746f207265706179000000000000000060448201526064015b60405180910390fd5b3360009081526001602090815260408083206001600160a01b038716845282528083208584529091529020548111156106c65760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f776044820152606560f81b6064820152608401610638565b3360008181526001602090815260408083206001600160a01b038881168552908352818420878552909252918290206002015491516323b872dd60e01b815273c778417e063141139fce010982780140aa0cd5ab936323b872dd936107349391929116908690600401610b43565b6020604051808303816000875af1158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107779190610bae565b503360009081526001602090815260408083206001600160a01b03871684528252808320858452909152812080548392906107b3908490610bd0565b909155505033600090815260208190526040812080548392906107d7908490610bd0565b90915550503360009081526001602090815260408083206001600160a01b0387168452825280832085845290915290205461086f57604051632142170760e11b81526001600160a01b038416906342842e0e9061083c90309033908790600401610b43565b600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b505050505b505050565b604051632142170760e11b81526001600160a01b038316906342842e0e906108a490309033908690600401610b43565b600060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b505050505050565b80356001600160a01b03811681146108f157600080fd5b919050565b6000806000806080858703121561090c57600080fd5b610915856108da565b9350610923602086016108da565b9250610931604086016108da565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561096d57600080fd5b610976856108da565b9350610984602086016108da565b925060408501359150606085013567ffffffffffffffff808211156109a857600080fd5b818701915087601f8301126109bc57600080fd5b8135818111156109ce576109ce610941565b604051601f8201601f19908116603f011681019083821181831017156109f6576109f6610941565b816040528281528a6020848701011115610a0f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215610a4857600080fd5b610a51846108da565b9250610a5f602085016108da565b9150604084013590509250925092565b600080600080600060a08688031215610a8757600080fd5b610a90866108da565b9450610a9e602087016108da565b9350610aac604087016108da565b94979396509394606081013594506080013592915050565b600080600060608486031215610ad957600080fd5b610ae2846108da565b95602085013595506040909401359392505050565b600060208284031215610b0957600080fd5b610b12826108da565b9392505050565b60008060408385031215610b2c57600080fd5b610b35836108da565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b9057610b90610b67565b500190565b600060208284031215610ba757600080fd5b5051919050565b600060208284031215610bc057600080fd5b81518015158114610b1257600080fd5b600082821015610be257610be2610b67565b50039056fea2646970667358221220256838420d8887735673793f129968ef07193ad9e72839be0dcf6f07c209374f64736f6c634300080b0033",
  "deployedSourceMap": "262:5558:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1107:219;;;;;;:::i;:::-;;:::i;:::-;;4493:200;;;;;;:::i;:::-;-1:-1:-1;;;4493:200:4;;;;;;;;;;-1:-1:-1;;;;;;2037:33:6;;;2019:52;;2007:2;1992:18;4493:200:4;;;;;;;;4036:451;;;;;;:::i;:::-;;:::i;5451:217::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5612:19:4;;;5586:7;5612:19;;;:11;:19;;;;;;;;:32;;;;;;;;;;;:42;;;;;;;;:49;;;;;5451:217;;;;-1:-1:-1;;;;;2579:32:6;;;2561:51;;2549:2;2534:18;5451:217:4;2415:203:6;1750:814:4;;;;;;:::i;:::-;;:::i;2727:1216::-;;;;;;:::i;:::-;;:::i;645:97::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;645:97:4;;;;;;;;;;;3629:25:6;;;-1:-1:-1;;;;;3728:15:6;;;3723:2;3708:18;;3701:43;3780:15;;3760:18;;;3753:43;3617:2;3602:18;645:97:4;3427:375:6;5154:221:4;;;;;;:::i;:::-;-1:-1:-1;;;;;5315:19:4;;;5289:7;5315:19;;;:11;:19;;;;;;;;:32;;;;;;;;;;;;:42;;;;;;:53;;5154:221;;;;3953:25:6;;;3941:2;3926:18;5154:221:4;3807:177:6;795:73:4;;826:42;795:73;;4964:122;;;;;;:::i;:::-;-1:-1:-1;;;;;5055:24:4;5029:7;5055:24;;;;;;;;;;;;4964:122;5674:144;;;;;;:::i;:::-;;:::i;1107:219::-;1255:64;;-1:-1:-1;;;1255:64:4;;-1:-1:-1;;;;;1255:37:4;;;;;:64;;1293:6;;1301:7;;1310:8;;1255:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1107:219;;;;:::o;4036:451::-;-1:-1:-1;;;;;4239:19:4;;;;;;;:11;:19;;;;;;;;4161:37;;;4239:32;;;;;;;;;:42;;;;;;;;;;:49;;;4161:159;;-1:-1:-1;;;4161:159:4;;:37;;;;:159;;4220:4;;4239:49;;;;;4272:8;;4161:159;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4330:19:4;;;4386:1;4330:19;;;:11;:19;;;;;;;;:32;;;;;;;;;;;;:42;;;;;;;;:57;4036:451::o;1750:814::-;-1:-1:-1;;;;;2040:19:4;;;;;;;:11;:19;;;;;;;;:32;;;;;;;;;;:42;;;;;;;;:49;;;;;:60;;;;2036:158;;-1:-1:-1;;;;;2124:19:4;;;;;;;:11;:19;;;;;;;;:32;;;;;;;;;;;:42;;;;;;:53;:58;2116:67;;;;;;2204:70;;-1:-1:-1;;;2204:70:4;;-1:-1:-1;;;;;2204:37:4;;;;;:70;;2242:6;;2258:4;;2265:8;;2204:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;2285:19:4;;;;;;;:11;:19;;;;;;;;:32;;;;;;;;;;;:42;;;;;;;;:67;;2342:10;;2285:19;:67;;2342:10;;2285:67;:::i;:::-;;;;-1:-1:-1;;;;;;;2362:24:4;;:16;:24;;;;;;;;;;:38;;2390:10;;2362:16;:38;;2390:10;;2362:38;:::i;:::-;;;;-1:-1:-1;;;;;;;;2410:19:4;;;;;;;:11;:19;;;;;;;;:32;;;;;;;;;;;:42;;;;;;;;;;;:49;;;:59;;;;;;-1:-1:-1;;;;;;2410:59:4;;;;;;;2500:48;;;;:57;;;;;;;;;;1750:814::o;2727:1216::-;2994:34;;-1:-1:-1;;;2994:34:4;;3017:10;2994:34;;;2561:51:6;3032:7:4;;826:42;;2994:22;;2534:18:6;;2994:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;2973:116;;;;-1:-1:-1;;;2973:116:4;;5475:2:6;2973:116:4;;;5457:21:6;5514:2;5494:18;;;5487:30;5553:26;5533:18;;;5526:54;5597:18;;2973:116:4;;;;;;;;;3168:10;3156:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3156:36:4;;;;;;;;;:46;;;;;;;;:57;:84;-1:-1:-1;3156:84:4;3135:164;;;;-1:-1:-1;;;3135:164:4;;5828:2:6;3135:164:4;;;5810:21:6;5867:2;5847:18;;;5840:30;5906:34;5886:18;;;5879:62;-1:-1:-1;;;5957:18:6;;;5950:31;5998:19;;3135:164:4;5626:397:6;3135:164:4;3349:10;3374:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3374:36:4;;;;;;;;;;;:46;;;;;;;;;;:53;;;3310:149;;-1:-1:-1;;;3310:149:4;;826:42;;3310:25;;:149;;3349:10;;3374:53;;;3442:7;;3310:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3482:10:4;3470:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3470:36:4;;;;;;;;;:46;;;;;;;;:68;;3531:7;;3470:23;:68;;3531:7;;3470:68;:::i;:::-;;;;-1:-1:-1;;3640:10:4;3623:16;:28;;;;;;;;;;:39;;3655:7;;3623:16;:39;;3655:7;;3623:39;:::i;:::-;;;;-1:-1:-1;;3724:10:4;3712:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3712:36:4;;;;;;;;;:46;;;;;;;;:57;3708:229;;3790:136;;-1:-1:-1;;;3790:136:4;;-1:-1:-1;;;;;3790:37:4;;;;;:136;;3853:4;;3876:10;;3904:8;;3790:136;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3708:229;2727:1216;;;:::o;5674:144::-;5745:66;;-1:-1:-1;;;5745:66:4;;-1:-1:-1;;;;;5745:29:4;;;;;:66;;5783:4;;5790:10;;5802:8;;5745:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5674:144;;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:403::-;278:6;286;294;302;355:3;343:9;334:7;330:23;326:33;323:53;;;372:1;369;362:12;323:53;395:29;414:9;395:29;:::i;:::-;385:39;;443:38;477:2;466:9;462:18;443:38;:::i;:::-;433:48;;500:38;534:2;523:9;519:18;500:38;:::i;:::-;192:403;;;;-1:-1:-1;490:48:6;;585:2;570:18;557:32;;-1:-1:-1;;192:403:6:o;600:127::-;661:10;656:3;652:20;649:1;642:31;692:4;689:1;682:15;716:4;713:1;706:15;732:1138;827:6;835;843;851;904:3;892:9;883:7;879:23;875:33;872:53;;;921:1;918;911:12;872:53;944:29;963:9;944:29;:::i;:::-;934:39;;992:38;1026:2;1015:9;1011:18;992:38;:::i;:::-;982:48;;1077:2;1066:9;1062:18;1049:32;1039:42;;1132:2;1121:9;1117:18;1104:32;1155:18;1196:2;1188:6;1185:14;1182:34;;;1212:1;1209;1202:12;1182:34;1250:6;1239:9;1235:22;1225:32;;1295:7;1288:4;1284:2;1280:13;1276:27;1266:55;;1317:1;1314;1307:12;1266:55;1353:2;1340:16;1375:2;1371;1368:10;1365:36;;;1381:18;;:::i;:::-;1456:2;1450:9;1424:2;1510:13;;-1:-1:-1;;1506:22:6;;;1530:2;1502:31;1498:40;1486:53;;;1554:18;;;1574:22;;;1551:46;1548:72;;;1600:18;;:::i;:::-;1640:10;1636:2;1629:22;1675:2;1667:6;1660:18;1715:7;1710:2;1705;1701;1697:11;1693:20;1690:33;1687:53;;;1736:1;1733;1726:12;1687:53;1792:2;1787;1783;1779:11;1774:2;1766:6;1762:15;1749:46;1837:1;1832:2;1827;1819:6;1815:15;1811:24;1804:35;1858:6;1848:16;;;;;;;732:1138;;;;;;;:::o;2082:328::-;2159:6;2167;2175;2228:2;2216:9;2207:7;2203:23;2199:32;2196:52;;;2244:1;2241;2234:12;2196:52;2267:29;2286:9;2267:29;:::i;:::-;2257:39;;2315:38;2349:2;2338:9;2334:18;2315:38;:::i;:::-;2305:48;;2400:2;2389:9;2385:18;2372:32;2362:42;;2082:328;;;;;:::o;2623:472::-;2718:6;2726;2734;2742;2750;2803:3;2791:9;2782:7;2778:23;2774:33;2771:53;;;2820:1;2817;2810:12;2771:53;2843:29;2862:9;2843:29;:::i;:::-;2833:39;;2891:38;2925:2;2914:9;2910:18;2891:38;:::i;:::-;2881:48;;2948:38;2982:2;2971:9;2967:18;2948:38;:::i;:::-;2623:472;;;;-1:-1:-1;2938:48:6;;3033:2;3018:18;;3005:32;;-1:-1:-1;3084:3:6;3069:19;3056:33;;2623:472;-1:-1:-1;;2623:472:6:o;3100:322::-;3177:6;3185;3193;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3285:29;3304:9;3285:29;:::i;:::-;3275:39;3361:2;3346:18;;3333:32;;-1:-1:-1;3412:2:6;3397:18;;;3384:32;;3100:322;-1:-1:-1;;;3100:322:6:o;3989:186::-;4048:6;4101:2;4089:9;4080:7;4076:23;4072:32;4069:52;;;4117:1;4114;4107:12;4069:52;4140:29;4159:9;4140:29;:::i;:::-;4130:39;3989:186;-1:-1:-1;;;3989:186:6:o;4180:254::-;4248:6;4256;4309:2;4297:9;4288:7;4284:23;4280:32;4277:52;;;4325:1;4322;4315:12;4277:52;4348:29;4367:9;4348:29;:::i;:::-;4338:39;4424:2;4409:18;;;;4396:32;;-1:-1:-1;;;4180:254:6:o;4439:375::-;-1:-1:-1;;;;;4697:15:6;;;4679:34;;4749:15;;;;4744:2;4729:18;;4722:43;4796:2;4781:18;;4774:34;;;;4629:2;4614:18;;4439:375::o;4819:127::-;4880:10;4875:3;4871:20;4868:1;4861:31;4911:4;4908:1;4901:15;4935:4;4932:1;4925:15;4951:128;4991:3;5022:1;5018:6;5015:1;5012:13;5009:39;;;5028:18;;:::i;:::-;-1:-1:-1;5064:9:6;;4951:128::o;5084:184::-;5154:6;5207:2;5195:9;5186:7;5182:23;5178:32;5175:52;;;5223:1;5220;5213:12;5175:52;-1:-1:-1;5246:16:6;;5084:184;-1:-1:-1;5084:184:6:o;6028:277::-;6095:6;6148:2;6136:9;6127:7;6123:23;6119:32;6116:52;;;6164:1;6161;6154:12;6116:52;6196:9;6190:16;6249:5;6242:13;6235:21;6228:5;6225:32;6215:60;;6271:1;6268;6261:12;6310:125;6350:4;6378:1;6375;6372:8;6369:34;;;6383:18;;:::i;:::-;-1:-1:-1;6420:9:6;;6310:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "collateralizedPurchase(address,address,address,uint256,uint256)": {
        "details": "the calling contract/function must approve the transfer to this contract address",
        "notice": "function transfers ownership from buyer to this contract to be held as collateralbuyer will automaticall receive thier NFT back once they repay the item value"
      },
      "exchangeNFT(address,address,address,uint256)": {
        "details": "the calling contract/function must approve the transfer to the seller's address",
        "notice": "function transfers ownership from buyer to seller"
      },
      "handleDefault(address,address,uint256)": {
        "notice": "upon defualt, the store gets th NFT, and the user no longer owes money."
      },
      "repay(address,uint256,uint256)": {
        "details": "the calling contract/function must approve the transfer of ERC20 to the seller address",
        "notice": "buyer pays back what they owe in WETH only"
      },
      "sellerCollateralNFT(address,address,uint256)": {
        "notice": "returns address of seller who has an NFT as collateral"
      },
      "totalValueBorrowed(address)": {
        "notice": "returns the total eth quantity owed by a user"
      },
      "valueBorrowedOneNFT(address,address,uint256)": {
        "notice": "returns value owed on 1 NFT used as collateral"
      }
    },
    "version": 1
  },
  "offset": [
    262,
    5820
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8CD2E0C7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8CD2E0C7 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x946CCFC0 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9FED0300 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xF2DF757B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF61556C8 EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1EEDB8 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x1E315FD6 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x3A1657B4 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x617A19C0 EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x957 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 PUSH1 0x2 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP3 MSTORE SWAP4 DUP6 MSTORE DUP4 DUP6 KECCAK256 SWAP1 MSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x157 PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x2D9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP3 PUSH4 0x42842E0E SWAP3 PUSH2 0x370 SWAP3 ADDRESS SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP2 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 AND SWAP1 DUP6 AND EQ PUSH2 0x449 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x479 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4EA SWAP1 DUP5 SWAP1 PUSH2 0xB7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x517 SWAP1 DUP5 SWAP1 PUSH2 0xB7D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP7 DUP10 AND DUP5 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 SWAP5 SSTORE SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST LT ISZERO PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F756768205745544820746F2072657061790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420706179206261636B206D6F7265207468616E20796F75206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x638 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x734 SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x753 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x777 SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7B3 SWAP1 DUP5 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7D7 SWAP1 DUP5 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x83C SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x8A4 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x915 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH2 0x923 PUSH1 0x20 DUP7 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP3 POP PUSH2 0x931 PUSH1 0x40 DUP7 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x976 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH2 0x984 PUSH1 0x20 DUP7 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CE PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x9F6 JUMPI PUSH2 0x9F6 PUSH2 0x941 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA51 DUP5 PUSH2 0x8DA JUMP JUMPDEST SWAP3 POP PUSH2 0xA5F PUSH1 0x20 DUP6 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA90 DUP7 PUSH2 0x8DA JUMP JUMPDEST SWAP5 POP PUSH2 0xA9E PUSH1 0x20 DUP8 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP4 POP PUSH2 0xAAC PUSH1 0x40 DUP8 ADD PUSH2 0x8DA JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE2 DUP5 PUSH2 0x8DA JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB12 DUP3 PUSH2 0x8DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB35 DUP4 PUSH2 0x8DA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB90 JUMPI PUSH2 0xB90 PUSH2 0xB67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE2 PUSH2 0xB67 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH9 0x38420D888773567379 EXTCODEHASH SLT SWAP10 PUSH9 0xEF07193AD9E72839BE 0xD 0xCF PUSH16 0x7C209374F64736F6C634300080B0033 ",
  "pcMap": {
    "0": {
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8CD2E0C7"
    },
    "38": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8CD2E0C7"
    },
    "49": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x182"
    },
    "53": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x946CCFC0"
    },
    "60": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x195"
    },
    "64": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9FED0300"
    },
    "71": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x204"
    },
    "75": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAD5C4648"
    },
    "82": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x252"
    },
    "86": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2DF757B"
    },
    "93": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26D"
    },
    "97": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF61556C8"
    },
    "104": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x296"
    },
    "108": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB1EEDB8"
    },
    "120": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x150B7A02"
    },
    "131": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1E315FD6"
    },
    "142": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFF"
    },
    "146": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3A1657B4"
    },
    "153": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x112"
    },
    "157": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x617A19C0"
    },
    "164": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16F"
    },
    "168": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        262,
        5820
      ],
      "op": "REVERT",
      "path": "4"
    },
    "174": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "175": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "178": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC"
    },
    "181": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "182": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "184": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8F6"
    },
    "187": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1107,
        1326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "188": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "189": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A9"
    },
    "192": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1107,
        1326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "193": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "194": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "STOP",
      "path": "4"
    },
    "195": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "196": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE1"
    },
    "199": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD1"
    },
    "202": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "203": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "205": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x957"
    },
    "208": {
      "fn": "Barter.onERC721Received",
      "jump": "i",
      "offset": [
        4493,
        4693
      ],
      "op": "JUMP",
      "path": "4"
    },
    "209": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "210": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "215": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "217": {
      "op": "SHL"
    },
    "218": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "219": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "220": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "POP",
      "path": "4"
    },
    "221": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "POP",
      "path": "4"
    },
    "222": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "POP",
      "path": "4"
    },
    "223": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "POP",
      "path": "4"
    },
    "224": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "JUMP",
      "path": "4"
    },
    "225": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "226": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "228": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "235": {
      "op": "SHL"
    },
    "236": {
      "op": "SUB"
    },
    "237": {
      "op": "NOT"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "SWAP2"
    },
    "240": {
      "op": "AND"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "247": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "249": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "250": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "DUP1",
      "path": "4"
    },
    "251": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "252": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "SUB",
      "path": "4"
    },
    "253": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "254": {
      "fn": "Barter.onERC721Received",
      "offset": [
        4493,
        4693
      ],
      "op": "RETURN",
      "path": "4"
    },
    "255": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "256": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "259": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10D"
    },
    "262": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "263": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "265": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA33"
    },
    "268": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        4036,
        4487
      ],
      "op": "JUMP",
      "path": "4"
    },
    "269": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "270": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x311"
    },
    "273": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        4036,
        4487
      ],
      "op": "JUMP",
      "path": "4"
    },
    "274": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "275": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "278": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x120"
    },
    "281": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "282": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "284": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA33"
    },
    "287": {
      "fn": "Barter.sellerCollateralNFT",
      "jump": "i",
      "offset": [
        5451,
        5668
      ],
      "op": "JUMP",
      "path": "4"
    },
    "288": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "SUB"
    },
    "297": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 0
    },
    "298": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "DUP4",
      "path": "4"
    },
    "299": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "AND",
      "path": "4"
    },
    "300": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5586,
        5593
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "302": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "303": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "DUP2",
      "path": "4"
    },
    "304": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "305": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "307": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "309": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "310": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "DUP2",
      "path": "4"
    },
    "311": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "312": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "314": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "DUP1",
      "path": "4"
    },
    "315": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "DUP4",
      "path": "4"
    },
    "316": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5631
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "317": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "318": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "DUP7",
      "path": "4"
    },
    "319": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "AND",
      "path": "4"
    },
    "320": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "DUP4",
      "path": "4"
    },
    "321": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "322": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "323": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "DUP2",
      "path": "4"
    },
    "324": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "325": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "DUP4",
      "path": "4"
    },
    "326": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "DUP3",
      "path": "4"
    },
    "327": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5644
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "328": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "329": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "DUP3",
      "path": "4"
    },
    "330": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "331": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "332": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "333": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "334": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "335": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5654
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "336": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5661
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "338": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5661
      ],
      "op": "ADD",
      "path": "4"
    },
    "339": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5661
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "340": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5661
      ],
      "op": "AND",
      "path": "4"
    },
    "341": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5612,
        5661
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "342": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "JUMP",
      "path": "4"
    },
    "343": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "344": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "346": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "353": {
      "op": "SHL"
    },
    "354": {
      "op": "SUB"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "SWAP2"
    },
    "357": {
      "op": "AND"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "362": {
      "op": "ADD"
    },
    "363": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        5451,
        5668
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "366": {
      "op": "JUMP"
    },
    "367": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "368": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "371": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17D"
    },
    "374": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "375": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "377": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA6F"
    },
    "380": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        1750,
        2564
      ],
      "op": "JUMP",
      "path": "4"
    },
    "381": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "382": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D5"
    },
    "385": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        1750,
        2564
      ],
      "op": "JUMP",
      "path": "4"
    },
    "386": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "387": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "390": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x190"
    },
    "393": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "394": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "396": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAC4"
    },
    "399": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        2727,
        3943
      ],
      "op": "JUMP",
      "path": "4"
    },
    "400": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "401": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x579"
    },
    "404": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        2727,
        3943
      ],
      "op": "JUMP",
      "path": "4"
    },
    "405": {
      "offset": [
        645,
        742
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "406": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF"
    },
    "409": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A3"
    },
    "412": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "413": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "415": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA33"
    },
    "418": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        645,
        742
      ],
      "op": "JUMP",
      "path": "4"
    },
    "419": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "420": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "422": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "424": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP2",
      "path": "4"
    },
    "425": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP2",
      "path": "4"
    },
    "426": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "427": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "429": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "430": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP6",
      "path": "4"
    },
    "431": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "432": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "434": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP1",
      "path": "4"
    },
    "435": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP7",
      "path": "4"
    },
    "436": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "437": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP3",
      "path": "4"
    },
    "438": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "439": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "440": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP6",
      "path": "4"
    },
    "441": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "442": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP4",
      "path": "4"
    },
    "443": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP6",
      "path": "4"
    },
    "444": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "445": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "446": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "447": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "448": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP4",
      "path": "4"
    },
    "449": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "450": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "451": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "452": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP1",
      "path": "4"
    },
    "453": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "454": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "455": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP2",
      "path": "4"
    },
    "456": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "ADD",
      "path": "4"
    },
    "457": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "458": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "460": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "461": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "462": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "ADD",
      "path": "4"
    },
    "463": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "offset": [
        645,
        742
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "473": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP3",
      "path": "4"
    },
    "474": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "AND",
      "path": "4"
    },
    "475": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "476": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "AND",
      "path": "4"
    },
    "477": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP4",
      "path": "4"
    },
    "478": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "JUMP",
      "path": "4"
    },
    "479": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "480": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "482": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "DUP1",
      "path": "4"
    },
    "483": {
      "fn": "Barter.repay",
      "offset": [
        645,
        742
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "484": {
      "op": "SWAP4"
    },
    "485": {
      "op": "DUP5"
    },
    "486": {
      "op": "MSTORE"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "op": "SWAP3"
    },
    "496": {
      "op": "DUP4"
    },
    "497": {
      "op": "AND"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "500": {
      "op": "DUP6"
    },
    "501": {
      "op": "ADD"
    },
    "502": {
      "op": "MSTORE"
    },
    "503": {
      "op": "SWAP2"
    },
    "504": {
      "op": "AND"
    },
    "505": {
      "op": "SWAP1"
    },
    "506": {
      "op": "DUP3"
    },
    "507": {
      "op": "ADD"
    },
    "508": {
      "op": "MSTORE"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "511": {
      "op": "ADD"
    },
    "512": {
      "offset": [
        645,
        742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "515": {
      "op": "JUMP"
    },
    "516": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "517": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x244"
    },
    "520": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x212"
    },
    "523": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "524": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "526": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA33"
    },
    "529": {
      "fn": "Barter.valueBorrowedOneNFT",
      "jump": "i",
      "offset": [
        5154,
        5375
      ],
      "op": "JUMP",
      "path": "4"
    },
    "530": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "op": "SUB"
    },
    "539": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 1
    },
    "540": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "DUP4",
      "path": "4"
    },
    "541": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "AND",
      "path": "4"
    },
    "542": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5289,
        5296
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "544": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "545": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "DUP2",
      "path": "4"
    },
    "546": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "547": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5326
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "549": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "551": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "552": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "DUP2",
      "path": "4"
    },
    "553": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "554": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "556": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "DUP1",
      "path": "4"
    },
    "557": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "DUP4",
      "path": "4"
    },
    "558": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5334
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "559": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "560": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "561": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "562": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "AND",
      "path": "4"
    },
    "563": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "DUP3",
      "path": "4"
    },
    "564": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "565": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "566": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "DUP4",
      "path": "4"
    },
    "567": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "568": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "DUP4",
      "path": "4"
    },
    "569": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "DUP2",
      "path": "4"
    },
    "570": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5347
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "571": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5357
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "572": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5357
      ],
      "op": "DUP2",
      "path": "4"
    },
    "573": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5357
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "574": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5357
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "575": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5357
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "576": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5357
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "577": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5368
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "578": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5315,
        5368
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "579": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "JUMP",
      "path": "4"
    },
    "580": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "581": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "583": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "584": {
      "op": "SWAP1"
    },
    "585": {
      "op": "DUP2"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        5154,
        5375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "593": {
      "op": "JUMP"
    },
    "594": {
      "offset": [
        795,
        868
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "595": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        795,
        868
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "598": {
      "offset": [
        826,
        868
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "619": {
      "offset": [
        795,
        868
      ],
      "op": "DUP2",
      "path": "4"
    },
    "620": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        795,
        868
      ],
      "op": "JUMP",
      "path": "4"
    },
    "621": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "622": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x244"
    },
    "625": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27B"
    },
    "628": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "629": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "631": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAF7"
    },
    "634": {
      "fn": "Barter.totalValueBorrowed",
      "jump": "i",
      "offset": [
        4964,
        5086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "635": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "AND",
      "path": "4",
      "statement": 2
    },
    "645": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5029,
        5036
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "647": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "648": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "DUP2",
      "path": "4"
    },
    "649": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "650": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "652": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "DUP2",
      "path": "4"
    },
    "653": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "654": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "655": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "657": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "658": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "659": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "660": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        5055,
        5079
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "661": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        4964,
        5086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "662": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "663": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "666": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A4"
    },
    "669": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "670": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "672": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB19"
    },
    "675": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        5674,
        5818
      ],
      "op": "JUMP",
      "path": "4"
    },
    "676": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "677": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x874"
    },
    "680": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        5674,
        5818
      ],
      "op": "JUMP",
      "path": "4"
    },
    "681": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "682": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "684": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "685": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "690": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "692": {
      "op": "SHL"
    },
    "693": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP2",
      "path": "4"
    },
    "694": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "701": {
      "op": "SHL"
    },
    "702": {
      "op": "SUB"
    },
    "703": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1292
      ],
      "op": "DUP4",
      "path": "4"
    },
    "704": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1292
      ],
      "op": "AND",
      "path": "4"
    },
    "705": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "706": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1292
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "711": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "712": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D9"
    },
    "715": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "716": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1293,
        1299
      ],
      "op": "DUP8",
      "path": "4"
    },
    "717": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1293,
        1299
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "718": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1301,
        1308
      ],
      "op": "DUP8",
      "path": "4"
    },
    "719": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1301,
        1308
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "720": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1310,
        1318
      ],
      "op": "DUP7",
      "path": "4"
    },
    "721": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1310,
        1318
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "722": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "724": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "ADD",
      "path": "4"
    },
    "725": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB43"
    },
    "728": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1255,
        1319
      ],
      "op": "JUMP",
      "path": "4"
    },
    "729": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "730": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "732": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "734": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "735": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "736": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP4",
      "path": "4"
    },
    "737": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "SUB",
      "path": "4"
    },
    "738": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP2",
      "path": "4"
    },
    "739": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "741": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP8",
      "path": "4"
    },
    "742": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "743": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "744": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "745": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "746": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "747": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F3"
    },
    "750": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "751": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "753": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "754": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "REVERT",
      "path": "4"
    },
    "755": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "756": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "POP",
      "path": "4"
    },
    "757": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "GAS",
      "path": "4"
    },
    "758": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "CALL",
      "path": "4"
    },
    "759": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "760": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "761": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "762": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x307"
    },
    "765": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "766": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "767": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "769": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "770": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "771": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "772": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "774": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "REVERT",
      "path": "4"
    },
    "775": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "776": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "POP",
      "path": "4"
    },
    "777": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "POP",
      "path": "4"
    },
    "778": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "POP",
      "path": "4"
    },
    "779": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1255,
        1319
      ],
      "op": "POP",
      "path": "4"
    },
    "780": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "POP",
      "path": "4"
    },
    "781": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "POP",
      "path": "4"
    },
    "782": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "POP",
      "path": "4"
    },
    "783": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1107,
        1326
      ],
      "op": "POP",
      "path": "4"
    },
    "784": {
      "fn": "Barter.exchangeNFT",
      "jump": "o",
      "offset": [
        1107,
        1326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "785": {
      "fn": "Barter.handleDefault",
      "offset": [
        4036,
        4487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "op": "SUB"
    },
    "794": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 4
    },
    "795": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "DUP2",
      "path": "4"
    },
    "796": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "AND",
      "path": "4"
    },
    "797": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "799": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "800": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "DUP2",
      "path": "4"
    },
    "801": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "802": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "804": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "806": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "807": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "DUP2",
      "path": "4"
    },
    "808": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "809": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "811": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "DUP1",
      "path": "4"
    },
    "812": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "DUP4",
      "path": "4"
    },
    "813": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4258
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "814": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4198
      ],
      "op": "DUP5",
      "path": "4"
    },
    "815": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4198
      ],
      "op": "DUP8",
      "path": "4"
    },
    "816": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4198
      ],
      "op": "AND",
      "path": "4"
    },
    "817": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "DUP1",
      "path": "4"
    },
    "818": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "DUP6",
      "path": "4"
    },
    "819": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "820": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "821": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "DUP4",
      "path": "4"
    },
    "822": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "823": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "DUP2",
      "path": "4"
    },
    "824": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "DUP5",
      "path": "4"
    },
    "825": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4271
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "826": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "DUP7",
      "path": "4"
    },
    "827": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "DUP6",
      "path": "4"
    },
    "828": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "829": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "830": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "831": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "832": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "833": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "DUP3",
      "path": "4"
    },
    "834": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "835": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4281
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "836": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "838": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "ADD",
      "path": "4"
    },
    "839": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "840": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "841": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "842": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP2",
      "path": "4"
    },
    "851": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "852": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4198
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "853": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4198
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "854": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4198
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "859": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4198
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "860": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x370"
    },
    "863": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "864": {
      "fn": "Barter.handleDefault",
      "offset": [
        4220,
        4224
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "865": {
      "fn": "Barter.handleDefault",
      "offset": [
        4220,
        4224
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "866": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "867": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "868": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "869": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "AND",
      "path": "4"
    },
    "870": {
      "fn": "Barter.handleDefault",
      "offset": [
        4239,
        4288
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "871": {
      "fn": "Barter.handleDefault",
      "offset": [
        4272,
        4280
      ],
      "op": "DUP7",
      "path": "4"
    },
    "872": {
      "fn": "Barter.handleDefault",
      "offset": [
        4272,
        4280
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "873": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "875": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "ADD",
      "path": "4"
    },
    "876": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB43"
    },
    "879": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        4161,
        4320
      ],
      "op": "JUMP",
      "path": "4"
    },
    "880": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "881": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "883": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "885": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "886": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP1",
      "path": "4"
    },
    "887": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP4",
      "path": "4"
    },
    "888": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "SUB",
      "path": "4"
    },
    "889": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP2",
      "path": "4"
    },
    "890": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "892": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP8",
      "path": "4"
    },
    "893": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP1",
      "path": "4"
    },
    "894": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "895": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "896": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP1",
      "path": "4"
    },
    "897": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "898": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38A"
    },
    "901": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "902": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "904": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP1",
      "path": "4"
    },
    "905": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "REVERT",
      "path": "4"
    },
    "906": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "907": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "POP",
      "path": "4"
    },
    "908": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "GAS",
      "path": "4"
    },
    "909": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "CALL",
      "path": "4"
    },
    "910": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "911": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP1",
      "path": "4"
    },
    "912": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "913": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39E"
    },
    "916": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "917": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "918": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "920": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "DUP1",
      "path": "4"
    },
    "921": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "922": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "923": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "925": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "REVERT",
      "path": "4"
    },
    "926": {
      "fn": "Barter.handleDefault",
      "offset": [
        4161,
        4320
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "op": "POP"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "op": "SUB"
    },
    "939": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 5
    },
    "940": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "DUP4",
      "path": "4"
    },
    "941": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "AND",
      "path": "4"
    },
    "942": {
      "fn": "Barter.handleDefault",
      "offset": [
        4386,
        4387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "944": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "945": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "DUP2",
      "path": "4"
    },
    "946": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "947": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4341
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "949": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "951": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "952": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "DUP2",
      "path": "4"
    },
    "953": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "954": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "956": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "957": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "DUP4",
      "path": "4"
    },
    "958": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4349
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "959": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "960": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "961": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "962": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "AND",
      "path": "4"
    },
    "963": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "DUP3",
      "path": "4"
    },
    "964": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "965": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "966": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "DUP4",
      "path": "4"
    },
    "967": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "968": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "DUP4",
      "path": "4"
    },
    "969": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "DUP2",
      "path": "4"
    },
    "970": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4362
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "971": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "972": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "DUP2",
      "path": "4"
    },
    "973": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "974": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "975": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "976": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "977": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "DUP2",
      "path": "4"
    },
    "978": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4372
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "979": {
      "fn": "Barter.handleDefault",
      "offset": [
        4330,
        4387
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "980": {
      "fn": "Barter.handleDefault",
      "jump": "o",
      "offset": [
        4036,
        4487
      ],
      "op": "JUMP",
      "path": "4"
    },
    "981": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        1750,
        2564
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "SUB"
    },
    "990": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "DUP6",
      "path": "4"
    },
    "991": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "DUP2",
      "path": "4"
    },
    "992": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "AND",
      "path": "4"
    },
    "993": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "995": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "996": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "DUP2",
      "path": "4"
    },
    "997": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "998": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1000": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1002": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1003": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1004": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1005": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1007": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1008": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1009": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2059
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1010": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1011": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1012": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "AND",
      "path": "4"
    },
    "1013": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1014": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1015": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1016": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1017": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1018": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1019": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2072
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1020": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1021": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1022": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1023": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1024": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1025": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1026": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1027": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2082
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1028": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2089
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1030": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2089
      ],
      "op": "ADD",
      "path": "4"
    },
    "1031": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2089
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1032": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2089
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1033": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2089
      ],
      "op": "AND",
      "path": "4"
    },
    "1034": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1035": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2100
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1036": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2100
      ],
      "op": "AND",
      "path": "4"
    },
    "1037": {
      "branch": 19,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2040,
        2100
      ],
      "op": "EQ",
      "path": "4"
    },
    "1038": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2036,
        2194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x449"
    },
    "1041": {
      "branch": 19,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2036,
        2194
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 6
    },
    "1051": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1052": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "AND",
      "path": "4"
    },
    "1053": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1055": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1056": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1057": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1058": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2135
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1060": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1062": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1063": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1064": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1065": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1067": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1068": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1069": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2143
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1070": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1071": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1072": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "AND",
      "path": "4"
    },
    "1073": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1074": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1075": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1076": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1077": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1078": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1079": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1080": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2156
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1081": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2166
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1082": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2166
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1083": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2166
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1084": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2166
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1085": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2166
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1086": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2166
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1087": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2177
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1088": {
      "branch": 20,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2124,
        2182
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1089": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2116,
        2183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x449"
    },
    "1092": {
      "branch": 20,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2116,
        2183
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1093": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2116,
        2183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1095": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2116,
        2183
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1096": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2116,
        2183
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1097": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2116,
        2183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1098": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x40"
    },
    "1100": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1101": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1110": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1117": {
      "op": "SHL"
    },
    "1118": {
      "op": "SUB"
    },
    "1119": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2241
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1120": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2241
      ],
      "op": "AND",
      "path": "4"
    },
    "1121": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2241
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1122": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2241
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "1127": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2241
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1128": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x479"
    },
    "1131": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1132": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2242,
        2248
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1133": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2242,
        2248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1134": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2258,
        2262
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "1135": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2258,
        2262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1136": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2265,
        2273
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1137": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2265,
        2273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1138": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1140": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "ADD",
      "path": "4"
    },
    "1141": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB43"
    },
    "1144": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        2204,
        2274
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1145": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1146": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1148": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1150": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1151": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1152": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1153": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "SUB",
      "path": "4"
    },
    "1154": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1155": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1157": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1158": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1159": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1160": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1161": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1162": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1163": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x493"
    },
    "1166": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1167": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1169": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1170": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1171": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1172": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "POP",
      "path": "4"
    },
    "1173": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "GAS",
      "path": "4"
    },
    "1174": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "CALL",
      "path": "4"
    },
    "1175": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1176": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1177": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1178": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A7"
    },
    "1181": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1182": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1183": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1185": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1186": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1187": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1188": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1190": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1191": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2204,
        2274
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "op": "POP"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "op": "POP"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "SUB"
    },
    "1204": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 8
    },
    "1205": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1206": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "AND",
      "path": "4"
    },
    "1207": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1209": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1210": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1211": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1212": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2296
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1214": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1216": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1217": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1218": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1219": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1221": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1222": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1223": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1224": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1225": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1226": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "AND",
      "path": "4"
    },
    "1227": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1228": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1229": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1230": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1231": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1232": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1233": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1234": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2317
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1235": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1236": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1237": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1238": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1239": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1240": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1241": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1242": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2327
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1243": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1244": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1245": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2342,
        2352
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1246": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2342,
        2352
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1247": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2304
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1248": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4EA"
    },
    "1251": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1252": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2342,
        2352
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1253": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2342,
        2352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1254": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB7D"
    },
    "1257": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        2285,
        2352
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1258": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1259": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1260": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1261": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2285,
        2352
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1262": {
      "op": "POP"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "op": "SUB"
    },
    "1272": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 9
    },
    "1273": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "AND",
      "path": "4"
    },
    "1274": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1276": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1277": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1278": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1279": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1281": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1282": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1283": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1284": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1286": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1287": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2386
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1288": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1289": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1290": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2390,
        2400
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1291": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2390,
        2400
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1292": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1293": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x517"
    },
    "1296": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1297": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2390,
        2400
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1298": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2390,
        2400
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1299": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB7D"
    },
    "1302": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        2362,
        2400
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1303": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1304": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1305": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1306": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2362,
        2400
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1316": {
      "op": "SHL"
    },
    "1317": {
      "op": "SUB"
    },
    "1318": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "SWAP4",
      "path": "4",
      "statement": 10
    },
    "1319": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1320": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "AND",
      "path": "4"
    },
    "1321": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1323": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1324": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1325": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1326": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2421
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1328": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1330": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1331": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1332": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1333": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1335": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1336": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1337": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2429
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1338": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1339": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1340": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "AND",
      "path": "4"
    },
    "1341": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1342": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1343": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1344": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1345": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1346": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1347": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1348": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2442
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1349": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1350": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1351": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1352": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1353": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1354": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1355": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1356": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1357": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1358": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1359": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2452
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1360": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1362": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2459
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1363": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2459
      ],
      "op": "ADD",
      "path": "4"
    },
    "1364": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1365": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1366": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1367": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1368": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1369": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "AND",
      "path": "4"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "op": "SUB"
    },
    "1378": {
      "op": "NOT"
    },
    "1379": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1380": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1381": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "AND",
      "path": "4"
    },
    "1382": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "OR",
      "path": "4"
    },
    "1383": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1384": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1385": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2410,
        2469
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1386": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2548
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 11
    },
    "1387": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2548
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1388": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2548
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1389": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2548
      ],
      "op": "ADD",
      "path": "4"
    },
    "1390": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1391": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1392": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1393": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1394": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "AND",
      "path": "4"
    },
    "1395": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1396": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1397": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "OR",
      "path": "4"
    },
    "1398": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1399": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2500,
        2557
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1400": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "o",
      "offset": [
        1750,
        2564
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1401": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1402": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x40"
    },
    "1404": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1405": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1414": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1415": {
      "fn": "Barter.repay",
      "offset": [
        3017,
        3027
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1416": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1418": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1419": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "ADD",
      "path": "4"
    },
    "1420": {
      "op": "MSTORE"
    },
    "1421": {
      "fn": "Barter.repay",
      "offset": [
        3032,
        3039
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1422": {
      "fn": "Barter.repay",
      "offset": [
        3032,
        3039
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1423": {
      "offset": [
        826,
        868
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "1444": {
      "fn": "Barter.repay",
      "offset": [
        826,
        868
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1445": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3016
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "1450": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1453": {
      "op": "ADD"
    },
    "1454": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1456": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1458": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1459": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1460": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1461": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "SUB",
      "path": "4"
    },
    "1462": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1463": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1464": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "GAS",
      "path": "4"
    },
    "1465": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "1466": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1467": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1468": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1469": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5CA"
    },
    "1472": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1473": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1474": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1476": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1477": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1478": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1479": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1481": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1482": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1483": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "POP",
      "path": "4"
    },
    "1484": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "POP",
      "path": "4"
    },
    "1485": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "POP",
      "path": "4"
    },
    "1486": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "POP",
      "path": "4"
    },
    "1487": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1489": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1490": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1491": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1493": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "NOT",
      "path": "4"
    },
    "1494": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1496": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1497": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "ADD",
      "path": "4"
    },
    "1498": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "AND",
      "path": "4"
    },
    "1499": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1500": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "ADD",
      "path": "4"
    },
    "1501": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1502": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1504": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1505": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "POP",
      "path": "4"
    },
    "1506": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1507": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "ADD",
      "path": "4"
    },
    "1508": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1509": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5EE"
    },
    "1512": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1513": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1514": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB95"
    },
    "1517": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        2994,
        3028
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1518": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3028
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1519": {
      "fn": "Barter.repay",
      "offset": [
        2994,
        3039
      ],
      "op": "LT",
      "path": "4"
    },
    "1520": {
      "branch": 21,
      "fn": "Barter.repay",
      "offset": [
        2994,
        3039
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1521": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x641"
    },
    "1524": {
      "branch": 21,
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1525": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1527": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1536": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1539": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1541": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1542": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "ADD",
      "path": "4"
    },
    "1543": {
      "op": "MSTORE"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1548": {
      "op": "DUP3"
    },
    "1549": {
      "op": "ADD"
    },
    "1550": {
      "op": "MSTORE"
    },
    "1551": {
      "op": "PUSH32",
      "value": "0x6E6F7420656E6F756768205745544820746F2072657061790000000000000000"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1586": {
      "op": "DUP3"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "op": "MSTORE"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1593": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1595": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1596": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1597": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1598": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "SUB",
      "path": "4"
    },
    "1599": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1600": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1601": {
      "fn": "Barter.repay",
      "offset": [
        2973,
        3089
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1602": {
      "fn": "Barter.repay",
      "offset": [
        3168,
        3178
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 13
    },
    "1603": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1605": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1606": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1607": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1608": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3167
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1610": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1612": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1613": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1614": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1615": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1617": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1618": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1619": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3179
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1626": {
      "op": "SHL"
    },
    "1627": {
      "op": "SUB"
    },
    "1628": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1629": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "AND",
      "path": "4"
    },
    "1630": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1631": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1632": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1633": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1634": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1635": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1636": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3192
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1637": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1638": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1639": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1640": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1641": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1642": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1643": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1644": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3202
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1645": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3213
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1646": {
      "fn": "Barter.repay",
      "offset": [
        3156,
        3240
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1647": {
      "op": "GT"
    },
    "1648": {
      "branch": 22,
      "fn": "Barter.repay",
      "offset": [
        3156,
        3240
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1649": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6C6"
    },
    "1652": {
      "branch": 22,
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1653": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1655": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1662": {
      "op": "SHL"
    },
    "1663": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1664": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1667": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1669": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1670": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "ADD",
      "path": "4"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1676": {
      "op": "DUP3"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420706179206261636B206D6F7265207468616E20796F75206F77"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1714": {
      "op": "DUP3"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "op": "MSTORE"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1724": {
      "op": "DUP3"
    },
    "1725": {
      "op": "ADD"
    },
    "1726": {
      "op": "MSTORE"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x638"
    },
    "1733": {
      "op": "JUMP"
    },
    "1734": {
      "fn": "Barter.repay",
      "offset": [
        3135,
        3299
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1735": {
      "fn": "Barter.repay",
      "offset": [
        3349,
        3359
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 14
    },
    "1736": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1738": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1739": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1740": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1741": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3385
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1743": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1745": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1746": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1747": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1748": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1750": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1751": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1752": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3397
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "op": "SUB"
    },
    "1761": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1762": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1763": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "AND",
      "path": "4"
    },
    "1764": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1765": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1766": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1767": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1768": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1769": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1770": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1771": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3410
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1772": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1773": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1774": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1775": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1776": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1777": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1778": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1779": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1780": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1781": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3420
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1782": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3427
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1784": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3427
      ],
      "op": "ADD",
      "path": "4"
    },
    "1785": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3427
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1786": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1787": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1788": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1797": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1798": {
      "offset": [
        826,
        868
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "1819": {
      "fn": "Barter.repay",
      "offset": [
        826,
        868
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1820": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3335
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "1825": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3335
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1826": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x734"
    },
    "1829": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1830": {
      "fn": "Barter.repay",
      "offset": [
        3349,
        3359
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1831": {
      "fn": "Barter.repay",
      "offset": [
        3349,
        3359
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1832": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3427
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1833": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3427
      ],
      "op": "AND",
      "path": "4"
    },
    "1834": {
      "fn": "Barter.repay",
      "offset": [
        3374,
        3427
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1835": {
      "fn": "Barter.repay",
      "offset": [
        3442,
        3449
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1836": {
      "fn": "Barter.repay",
      "offset": [
        3442,
        3449
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1837": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1839": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "ADD",
      "path": "4"
    },
    "1840": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB43"
    },
    "1843": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3310,
        3459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1844": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1845": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1847": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1849": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1850": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1851": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1852": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "SUB",
      "path": "4"
    },
    "1853": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1854": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1856": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1857": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "GAS",
      "path": "4"
    },
    "1858": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "CALL",
      "path": "4"
    },
    "1859": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1860": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1861": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1862": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x753"
    },
    "1865": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1866": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1867": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1869": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1870": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1871": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1872": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1874": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1875": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1876": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "POP",
      "path": "4"
    },
    "1877": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "POP",
      "path": "4"
    },
    "1878": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "POP",
      "path": "4"
    },
    "1879": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "POP",
      "path": "4"
    },
    "1880": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1882": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1883": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1884": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1886": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "NOT",
      "path": "4"
    },
    "1887": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1889": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1890": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "ADD",
      "path": "4"
    },
    "1891": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "AND",
      "path": "4"
    },
    "1892": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1893": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "ADD",
      "path": "4"
    },
    "1894": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1895": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1897": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1898": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "POP",
      "path": "4"
    },
    "1899": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1900": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "ADD",
      "path": "4"
    },
    "1901": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1902": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x777"
    },
    "1905": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1906": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1907": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBAE"
    },
    "1910": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3310,
        3459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1911": {
      "fn": "Barter.repay",
      "offset": [
        3310,
        3459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "fn": "Barter.repay",
      "offset": [
        3482,
        3492
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 15
    },
    "1914": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1916": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1917": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1918": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1919": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1921": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1923": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1924": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1925": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1926": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1928": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1929": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1930": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "op": "SUB"
    },
    "1939": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1940": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "AND",
      "path": "4"
    },
    "1941": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1942": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1943": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1944": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1945": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1946": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1947": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3506
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1948": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1949": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1950": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1951": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1952": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1953": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1954": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1955": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3516
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1956": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1957": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1958": {
      "fn": "Barter.repay",
      "offset": [
        3531,
        3538
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1959": {
      "fn": "Barter.repay",
      "offset": [
        3531,
        3538
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1960": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3493
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1961": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B3"
    },
    "1964": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1965": {
      "fn": "Barter.repay",
      "offset": [
        3531,
        3538
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1966": {
      "fn": "Barter.repay",
      "offset": [
        3531,
        3538
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1967": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD0"
    },
    "1970": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3470,
        3538
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1971": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1972": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1973": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1974": {
      "fn": "Barter.repay",
      "offset": [
        3470,
        3538
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1975": {
      "op": "POP"
    },
    "1976": {
      "op": "POP"
    },
    "1977": {
      "fn": "Barter.repay",
      "offset": [
        3640,
        3650
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 16
    },
    "1978": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3639
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1980": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1981": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1982": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1983": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1985": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1986": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1987": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1988": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1990": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1991": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3651
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1992": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1993": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1994": {
      "fn": "Barter.repay",
      "offset": [
        3655,
        3662
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1995": {
      "fn": "Barter.repay",
      "offset": [
        3655,
        3662
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1996": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3639
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1997": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D7"
    },
    "2000": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2001": {
      "fn": "Barter.repay",
      "offset": [
        3655,
        3662
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2002": {
      "fn": "Barter.repay",
      "offset": [
        3655,
        3662
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2003": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD0"
    },
    "2006": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3623,
        3662
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2007": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2008": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2009": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2010": {
      "fn": "Barter.repay",
      "offset": [
        3623,
        3662
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "op": "POP"
    },
    "2013": {
      "fn": "Barter.repay",
      "offset": [
        3724,
        3734
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2014": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2016": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2017": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2018": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2019": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3723
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2021": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2023": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2024": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2025": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2026": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2028": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2029": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2030": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3735
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "op": "SUB"
    },
    "2039": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2040": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "AND",
      "path": "4"
    },
    "2041": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2042": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2043": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2044": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2045": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2046": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2047": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3748
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2048": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2049": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2050": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2051": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2052": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2053": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2054": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2055": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3758
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2056": {
      "fn": "Barter.repay",
      "offset": [
        3712,
        3769
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2057": {
      "fn": "Barter.repay",
      "offset": [
        3708,
        3937
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x86F"
    },
    "2060": {
      "fn": "Barter.repay",
      "offset": [
        3708,
        3937
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2061": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x40"
    },
    "2063": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2064": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2073": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2080": {
      "op": "SHL"
    },
    "2081": {
      "op": "SUB"
    },
    "2082": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3827
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2083": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3827
      ],
      "op": "AND",
      "path": "4"
    },
    "2084": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3827
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2085": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3827
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "2090": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3827
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2091": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x83C"
    },
    "2094": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2095": {
      "fn": "Barter.repay",
      "offset": [
        3853,
        3857
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2096": {
      "fn": "Barter.repay",
      "offset": [
        3853,
        3857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2097": {
      "fn": "Barter.repay",
      "offset": [
        3876,
        3886
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2098": {
      "fn": "Barter.repay",
      "offset": [
        3876,
        3886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2099": {
      "fn": "Barter.repay",
      "offset": [
        3904,
        3912
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2100": {
      "fn": "Barter.repay",
      "offset": [
        3904,
        3912
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2101": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2103": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "ADD",
      "path": "4"
    },
    "2104": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB43"
    },
    "2107": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3790,
        3926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2108": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2109": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2111": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2113": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2114": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2115": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2116": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "SUB",
      "path": "4"
    },
    "2117": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2118": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2120": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2121": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2122": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2123": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2124": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2125": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2126": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x856"
    },
    "2129": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2130": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2132": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2133": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2134": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2135": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "POP",
      "path": "4"
    },
    "2136": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "GAS",
      "path": "4"
    },
    "2137": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "CALL",
      "path": "4"
    },
    "2138": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2139": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2140": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2141": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x86A"
    },
    "2144": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2145": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2146": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2148": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2149": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2150": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2151": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2153": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2154": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2155": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "POP",
      "path": "4"
    },
    "2156": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "POP",
      "path": "4"
    },
    "2157": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "POP",
      "path": "4"
    },
    "2158": {
      "fn": "Barter.repay",
      "offset": [
        3790,
        3926
      ],
      "op": "POP",
      "path": "4"
    },
    "2159": {
      "fn": "Barter.repay",
      "offset": [
        3708,
        3937
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2160": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "POP",
      "path": "4"
    },
    "2161": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "POP",
      "path": "4"
    },
    "2162": {
      "fn": "Barter.repay",
      "offset": [
        2727,
        3943
      ],
      "op": "POP",
      "path": "4"
    },
    "2163": {
      "fn": "Barter.repay",
      "jump": "o",
      "offset": [
        2727,
        3943
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2164": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2165": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 18,
      "value": "0x40"
    },
    "2167": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2168": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2175": {
      "op": "SHL"
    },
    "2176": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2177": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2184": {
      "op": "SHL"
    },
    "2185": {
      "op": "SUB"
    },
    "2186": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5774
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2187": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5774
      ],
      "op": "AND",
      "path": "4"
    },
    "2188": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2189": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5774
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "2194": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2195": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A4"
    },
    "2198": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2199": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5783,
        5787
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2200": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5783,
        5787
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2201": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5790,
        5800
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2202": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5790,
        5800
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2203": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5802,
        5810
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2204": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5802,
        5810
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2205": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2207": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "ADD",
      "path": "4"
    },
    "2208": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB43"
    },
    "2211": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        5745,
        5811
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2212": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2213": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2215": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2217": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2218": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2219": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2220": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "SUB",
      "path": "4"
    },
    "2221": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2222": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2224": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2225": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2226": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2227": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2228": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2229": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2230": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8BE"
    },
    "2233": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2234": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2236": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2237": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2238": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2239": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "POP",
      "path": "4"
    },
    "2240": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "GAS",
      "path": "4"
    },
    "2241": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "CALL",
      "path": "4"
    },
    "2242": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2243": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2244": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2245": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8D2"
    },
    "2248": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2249": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2250": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2252": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2253": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2254": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2255": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2257": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2258": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2259": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "POP",
      "path": "4"
    },
    "2260": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "POP",
      "path": "4"
    },
    "2261": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "POP",
      "path": "4"
    },
    "2262": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5745,
        5811
      ],
      "op": "POP",
      "path": "4"
    },
    "2263": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "POP",
      "path": "4"
    },
    "2264": {
      "fn": "Barter.emergencyExit",
      "offset": [
        5674,
        5818
      ],
      "op": "POP",
      "path": "4"
    },
    "2265": {
      "fn": "Barter.emergencyExit",
      "jump": "o",
      "offset": [
        5674,
        5818
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2266": {
      "op": "JUMPDEST"
    },
    "2267": {
      "op": "DUP1"
    },
    "2268": {
      "op": "CALLDATALOAD"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "op": "SUB"
    },
    "2277": {
      "op": "DUP2"
    },
    "2278": {
      "op": "AND"
    },
    "2279": {
      "op": "DUP2"
    },
    "2280": {
      "op": "EQ"
    },
    "2281": {
      "op": "PUSH2",
      "value": "0x8F1"
    },
    "2284": {
      "op": "JUMPI"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2287": {
      "op": "DUP1"
    },
    "2288": {
      "op": "REVERT"
    },
    "2289": {
      "op": "JUMPDEST"
    },
    "2290": {
      "op": "SWAP2"
    },
    "2291": {
      "op": "SWAP1"
    },
    "2292": {
      "op": "POP"
    },
    "2293": {
      "jump": "o",
      "op": "JUMP"
    },
    "2294": {
      "op": "JUMPDEST"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2297": {
      "op": "DUP1"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2300": {
      "op": "DUP1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2303": {
      "op": "DUP6"
    },
    "2304": {
      "op": "DUP8"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "op": "SLT"
    },
    "2307": {
      "op": "ISZERO"
    },
    "2308": {
      "op": "PUSH2",
      "value": "0x90C"
    },
    "2311": {
      "op": "JUMPI"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2314": {
      "op": "DUP1"
    },
    "2315": {
      "op": "REVERT"
    },
    "2316": {
      "op": "JUMPDEST"
    },
    "2317": {
      "op": "PUSH2",
      "value": "0x915"
    },
    "2320": {
      "op": "DUP6"
    },
    "2321": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2324": {
      "jump": "i",
      "op": "JUMP"
    },
    "2325": {
      "op": "JUMPDEST"
    },
    "2326": {
      "op": "SWAP4"
    },
    "2327": {
      "op": "POP"
    },
    "2328": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2333": {
      "op": "DUP7"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2338": {
      "jump": "i",
      "op": "JUMP"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "SWAP3"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "op": "PUSH2",
      "value": "0x931"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2347": {
      "op": "DUP7"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2352": {
      "jump": "i",
      "op": "JUMP"
    },
    "2353": {
      "op": "JUMPDEST"
    },
    "2354": {
      "op": "SWAP4"
    },
    "2355": {
      "op": "SWAP7"
    },
    "2356": {
      "op": "SWAP3"
    },
    "2357": {
      "op": "SWAP6"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "op": "SWAP3"
    },
    "2360": {
      "op": "SWAP4"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "CALLDATALOAD"
    },
    "2365": {
      "op": "SWAP3"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "jump": "o",
      "op": "JUMP"
    },
    "2369": {
      "op": "JUMPDEST"
    },
    "2370": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2380": {
      "op": "MSTORE"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2385": {
      "op": "MSTORE"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2390": {
      "op": "REVERT"
    },
    "2391": {
      "op": "JUMPDEST"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2394": {
      "op": "DUP1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2397": {
      "op": "DUP1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2400": {
      "op": "DUP6"
    },
    "2401": {
      "op": "DUP8"
    },
    "2402": {
      "op": "SUB"
    },
    "2403": {
      "op": "SLT"
    },
    "2404": {
      "op": "ISZERO"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2408": {
      "op": "JUMPI"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2411": {
      "op": "DUP1"
    },
    "2412": {
      "op": "REVERT"
    },
    "2413": {
      "op": "JUMPDEST"
    },
    "2414": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "2417": {
      "op": "DUP6"
    },
    "2418": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2421": {
      "jump": "i",
      "op": "JUMP"
    },
    "2422": {
      "op": "JUMPDEST"
    },
    "2423": {
      "op": "SWAP4"
    },
    "2424": {
      "op": "POP"
    },
    "2425": {
      "op": "PUSH2",
      "value": "0x984"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2430": {
      "op": "DUP7"
    },
    "2431": {
      "op": "ADD"
    },
    "2432": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2435": {
      "jump": "i",
      "op": "JUMP"
    },
    "2436": {
      "op": "JUMPDEST"
    },
    "2437": {
      "op": "SWAP3"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2441": {
      "op": "DUP6"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "op": "CALLDATALOAD"
    },
    "2444": {
      "op": "SWAP2"
    },
    "2445": {
      "op": "POP"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2448": {
      "op": "DUP6"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "op": "CALLDATALOAD"
    },
    "2451": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2460": {
      "op": "DUP1"
    },
    "2461": {
      "op": "DUP3"
    },
    "2462": {
      "op": "GT"
    },
    "2463": {
      "op": "ISZERO"
    },
    "2464": {
      "op": "PUSH2",
      "value": "0x9A8"
    },
    "2467": {
      "op": "JUMPI"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2470": {
      "op": "DUP1"
    },
    "2471": {
      "op": "REVERT"
    },
    "2472": {
      "op": "JUMPDEST"
    },
    "2473": {
      "op": "DUP2"
    },
    "2474": {
      "op": "DUP8"
    },
    "2475": {
      "op": "ADD"
    },
    "2476": {
      "op": "SWAP2"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "DUP8"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2481": {
      "op": "DUP4"
    },
    "2482": {
      "op": "ADD"
    },
    "2483": {
      "op": "SLT"
    },
    "2484": {
      "op": "PUSH2",
      "value": "0x9BC"
    },
    "2487": {
      "op": "JUMPI"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2490": {
      "op": "DUP1"
    },
    "2491": {
      "op": "REVERT"
    },
    "2492": {
      "op": "JUMPDEST"
    },
    "2493": {
      "op": "DUP2"
    },
    "2494": {
      "op": "CALLDATALOAD"
    },
    "2495": {
      "op": "DUP2"
    },
    "2496": {
      "op": "DUP2"
    },
    "2497": {
      "op": "GT"
    },
    "2498": {
      "op": "ISZERO"
    },
    "2499": {
      "op": "PUSH2",
      "value": "0x9CE"
    },
    "2502": {
      "op": "JUMPI"
    },
    "2503": {
      "op": "PUSH2",
      "value": "0x9CE"
    },
    "2506": {
      "op": "PUSH2",
      "value": "0x941"
    },
    "2509": {
      "jump": "i",
      "op": "JUMP"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2513": {
      "op": "MLOAD"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2516": {
      "op": "DUP3"
    },
    "2517": {
      "op": "ADD"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2520": {
      "op": "NOT"
    },
    "2521": {
      "op": "SWAP1"
    },
    "2522": {
      "op": "DUP2"
    },
    "2523": {
      "op": "AND"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2526": {
      "op": "ADD"
    },
    "2527": {
      "op": "AND"
    },
    "2528": {
      "op": "DUP2"
    },
    "2529": {
      "op": "ADD"
    },
    "2530": {
      "op": "SWAP1"
    },
    "2531": {
      "op": "DUP4"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "GT"
    },
    "2534": {
      "op": "DUP2"
    },
    "2535": {
      "op": "DUP4"
    },
    "2536": {
      "op": "LT"
    },
    "2537": {
      "op": "OR"
    },
    "2538": {
      "op": "ISZERO"
    },
    "2539": {
      "op": "PUSH2",
      "value": "0x9F6"
    },
    "2542": {
      "op": "JUMPI"
    },
    "2543": {
      "op": "PUSH2",
      "value": "0x9F6"
    },
    "2546": {
      "op": "PUSH2",
      "value": "0x941"
    },
    "2549": {
      "jump": "i",
      "op": "JUMP"
    },
    "2550": {
      "op": "JUMPDEST"
    },
    "2551": {
      "op": "DUP2"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2554": {
      "op": "MSTORE"
    },
    "2555": {
      "op": "DUP3"
    },
    "2556": {
      "op": "DUP2"
    },
    "2557": {
      "op": "MSTORE"
    },
    "2558": {
      "op": "DUP11"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2561": {
      "op": "DUP5"
    },
    "2562": {
      "op": "DUP8"
    },
    "2563": {
      "op": "ADD"
    },
    "2564": {
      "op": "ADD"
    },
    "2565": {
      "op": "GT"
    },
    "2566": {
      "op": "ISZERO"
    },
    "2567": {
      "op": "PUSH2",
      "value": "0xA0F"
    },
    "2570": {
      "op": "JUMPI"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2573": {
      "op": "DUP1"
    },
    "2574": {
      "op": "REVERT"
    },
    "2575": {
      "op": "JUMPDEST"
    },
    "2576": {
      "op": "DUP3"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2579": {
      "op": "DUP7"
    },
    "2580": {
      "op": "ADD"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2583": {
      "op": "DUP4"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "op": "CALLDATACOPY"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2590": {
      "op": "DUP5"
    },
    "2591": {
      "op": "DUP4"
    },
    "2592": {
      "op": "ADD"
    },
    "2593": {
      "op": "ADD"
    },
    "2594": {
      "op": "MSTORE"
    },
    "2595": {
      "op": "DUP1"
    },
    "2596": {
      "op": "SWAP6"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "op": "POP"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "op": "SWAP3"
    },
    "2604": {
      "op": "SWAP6"
    },
    "2605": {
      "op": "SWAP2"
    },
    "2606": {
      "op": "SWAP5"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "op": "SWAP3"
    },
    "2609": {
      "op": "POP"
    },
    "2610": {
      "jump": "o",
      "op": "JUMP"
    },
    "2611": {
      "op": "JUMPDEST"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2614": {
      "op": "DUP1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2619": {
      "op": "DUP5"
    },
    "2620": {
      "op": "DUP7"
    },
    "2621": {
      "op": "SUB"
    },
    "2622": {
      "op": "SLT"
    },
    "2623": {
      "op": "ISZERO"
    },
    "2624": {
      "op": "PUSH2",
      "value": "0xA48"
    },
    "2627": {
      "op": "JUMPI"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2630": {
      "op": "DUP1"
    },
    "2631": {
      "op": "REVERT"
    },
    "2632": {
      "op": "JUMPDEST"
    },
    "2633": {
      "op": "PUSH2",
      "value": "0xA51"
    },
    "2636": {
      "op": "DUP5"
    },
    "2637": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2640": {
      "jump": "i",
      "op": "JUMP"
    },
    "2641": {
      "op": "JUMPDEST"
    },
    "2642": {
      "op": "SWAP3"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "op": "PUSH2",
      "value": "0xA5F"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2649": {
      "op": "DUP6"
    },
    "2650": {
      "op": "ADD"
    },
    "2651": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2654": {
      "jump": "i",
      "op": "JUMP"
    },
    "2655": {
      "op": "JUMPDEST"
    },
    "2656": {
      "op": "SWAP2"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2660": {
      "op": "DUP5"
    },
    "2661": {
      "op": "ADD"
    },
    "2662": {
      "op": "CALLDATALOAD"
    },
    "2663": {
      "op": "SWAP1"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "op": "SWAP3"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "op": "SWAP3"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "op": "SWAP3"
    },
    "2670": {
      "jump": "o",
      "op": "JUMP"
    },
    "2671": {
      "op": "JUMPDEST"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2674": {
      "op": "DUP1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2677": {
      "op": "DUP1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "DUP7"
    },
    "2683": {
      "op": "DUP9"
    },
    "2684": {
      "op": "SUB"
    },
    "2685": {
      "op": "SLT"
    },
    "2686": {
      "op": "ISZERO"
    },
    "2687": {
      "op": "PUSH2",
      "value": "0xA87"
    },
    "2690": {
      "op": "JUMPI"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2693": {
      "op": "DUP1"
    },
    "2694": {
      "op": "REVERT"
    },
    "2695": {
      "op": "JUMPDEST"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0xA90"
    },
    "2699": {
      "op": "DUP7"
    },
    "2700": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2703": {
      "jump": "i",
      "op": "JUMP"
    },
    "2704": {
      "op": "JUMPDEST"
    },
    "2705": {
      "op": "SWAP5"
    },
    "2706": {
      "op": "POP"
    },
    "2707": {
      "op": "PUSH2",
      "value": "0xA9E"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2712": {
      "op": "DUP8"
    },
    "2713": {
      "op": "ADD"
    },
    "2714": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2717": {
      "jump": "i",
      "op": "JUMP"
    },
    "2718": {
      "op": "JUMPDEST"
    },
    "2719": {
      "op": "SWAP4"
    },
    "2720": {
      "op": "POP"
    },
    "2721": {
      "op": "PUSH2",
      "value": "0xAAC"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2726": {
      "op": "DUP8"
    },
    "2727": {
      "op": "ADD"
    },
    "2728": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2731": {
      "jump": "i",
      "op": "JUMP"
    },
    "2732": {
      "op": "JUMPDEST"
    },
    "2733": {
      "op": "SWAP5"
    },
    "2734": {
      "op": "SWAP8"
    },
    "2735": {
      "op": "SWAP4"
    },
    "2736": {
      "op": "SWAP7"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "op": "SWAP4"
    },
    "2739": {
      "op": "SWAP5"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2742": {
      "op": "DUP2"
    },
    "2743": {
      "op": "ADD"
    },
    "2744": {
      "op": "CALLDATALOAD"
    },
    "2745": {
      "op": "SWAP5"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2749": {
      "op": "ADD"
    },
    "2750": {
      "op": "CALLDATALOAD"
    },
    "2751": {
      "op": "SWAP3"
    },
    "2752": {
      "op": "SWAP2"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "jump": "o",
      "op": "JUMP"
    },
    "2756": {
      "op": "JUMPDEST"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2759": {
      "op": "DUP1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2764": {
      "op": "DUP5"
    },
    "2765": {
      "op": "DUP7"
    },
    "2766": {
      "op": "SUB"
    },
    "2767": {
      "op": "SLT"
    },
    "2768": {
      "op": "ISZERO"
    },
    "2769": {
      "op": "PUSH2",
      "value": "0xAD9"
    },
    "2772": {
      "op": "JUMPI"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2775": {
      "op": "DUP1"
    },
    "2776": {
      "op": "REVERT"
    },
    "2777": {
      "op": "JUMPDEST"
    },
    "2778": {
      "op": "PUSH2",
      "value": "0xAE2"
    },
    "2781": {
      "op": "DUP5"
    },
    "2782": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2785": {
      "jump": "i",
      "op": "JUMP"
    },
    "2786": {
      "op": "JUMPDEST"
    },
    "2787": {
      "op": "SWAP6"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2790": {
      "op": "DUP6"
    },
    "2791": {
      "op": "ADD"
    },
    "2792": {
      "op": "CALLDATALOAD"
    },
    "2793": {
      "op": "SWAP6"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2797": {
      "op": "SWAP1"
    },
    "2798": {
      "op": "SWAP5"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "op": "CALLDATALOAD"
    },
    "2801": {
      "op": "SWAP4"
    },
    "2802": {
      "op": "SWAP3"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "op": "POP"
    },
    "2805": {
      "op": "POP"
    },
    "2806": {
      "jump": "o",
      "op": "JUMP"
    },
    "2807": {
      "op": "JUMPDEST"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2812": {
      "op": "DUP3"
    },
    "2813": {
      "op": "DUP5"
    },
    "2814": {
      "op": "SUB"
    },
    "2815": {
      "op": "SLT"
    },
    "2816": {
      "op": "ISZERO"
    },
    "2817": {
      "op": "PUSH2",
      "value": "0xB09"
    },
    "2820": {
      "op": "JUMPI"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2823": {
      "op": "DUP1"
    },
    "2824": {
      "op": "REVERT"
    },
    "2825": {
      "op": "JUMPDEST"
    },
    "2826": {
      "op": "PUSH2",
      "value": "0xB12"
    },
    "2829": {
      "op": "DUP3"
    },
    "2830": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2833": {
      "jump": "i",
      "op": "JUMP"
    },
    "2834": {
      "op": "JUMPDEST"
    },
    "2835": {
      "op": "SWAP4"
    },
    "2836": {
      "op": "SWAP3"
    },
    "2837": {
      "op": "POP"
    },
    "2838": {
      "op": "POP"
    },
    "2839": {
      "op": "POP"
    },
    "2840": {
      "jump": "o",
      "op": "JUMP"
    },
    "2841": {
      "op": "JUMPDEST"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2844": {
      "op": "DUP1"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2847": {
      "op": "DUP4"
    },
    "2848": {
      "op": "DUP6"
    },
    "2849": {
      "op": "SUB"
    },
    "2850": {
      "op": "SLT"
    },
    "2851": {
      "op": "ISZERO"
    },
    "2852": {
      "op": "PUSH2",
      "value": "0xB2C"
    },
    "2855": {
      "op": "JUMPI"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2858": {
      "op": "DUP1"
    },
    "2859": {
      "op": "REVERT"
    },
    "2860": {
      "op": "JUMPDEST"
    },
    "2861": {
      "op": "PUSH2",
      "value": "0xB35"
    },
    "2864": {
      "op": "DUP4"
    },
    "2865": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2868": {
      "jump": "i",
      "op": "JUMP"
    },
    "2869": {
      "op": "JUMPDEST"
    },
    "2870": {
      "op": "SWAP5"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2873": {
      "op": "SWAP4"
    },
    "2874": {
      "op": "SWAP1"
    },
    "2875": {
      "op": "SWAP4"
    },
    "2876": {
      "op": "ADD"
    },
    "2877": {
      "op": "CALLDATALOAD"
    },
    "2878": {
      "op": "SWAP4"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "op": "POP"
    },
    "2881": {
      "op": "POP"
    },
    "2882": {
      "jump": "o",
      "op": "JUMP"
    },
    "2883": {
      "op": "JUMPDEST"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "SUB"
    },
    "2892": {
      "op": "SWAP4"
    },
    "2893": {
      "op": "DUP5"
    },
    "2894": {
      "op": "AND"
    },
    "2895": {
      "op": "DUP2"
    },
    "2896": {
      "op": "MSTORE"
    },
    "2897": {
      "op": "SWAP2"
    },
    "2898": {
      "op": "SWAP1"
    },
    "2899": {
      "op": "SWAP3"
    },
    "2900": {
      "op": "AND"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2903": {
      "op": "DUP3"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2908": {
      "op": "DUP2"
    },
    "2909": {
      "op": "ADD"
    },
    "2910": {
      "op": "SWAP2"
    },
    "2911": {
      "op": "SWAP1"
    },
    "2912": {
      "op": "SWAP2"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2916": {
      "op": "ADD"
    },
    "2917": {
      "op": "SWAP1"
    },
    "2918": {
      "jump": "o",
      "op": "JUMP"
    },
    "2919": {
      "op": "JUMPDEST"
    },
    "2920": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2927": {
      "op": "SHL"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2930": {
      "op": "MSTORE"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2935": {
      "op": "MSTORE"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2940": {
      "op": "REVERT"
    },
    "2941": {
      "op": "JUMPDEST"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2944": {
      "op": "DUP3"
    },
    "2945": {
      "op": "NOT"
    },
    "2946": {
      "op": "DUP3"
    },
    "2947": {
      "op": "GT"
    },
    "2948": {
      "op": "ISZERO"
    },
    "2949": {
      "op": "PUSH2",
      "value": "0xB90"
    },
    "2952": {
      "op": "JUMPI"
    },
    "2953": {
      "op": "PUSH2",
      "value": "0xB90"
    },
    "2956": {
      "op": "PUSH2",
      "value": "0xB67"
    },
    "2959": {
      "jump": "i",
      "op": "JUMP"
    },
    "2960": {
      "op": "JUMPDEST"
    },
    "2961": {
      "op": "POP"
    },
    "2962": {
      "op": "ADD"
    },
    "2963": {
      "op": "SWAP1"
    },
    "2964": {
      "jump": "o",
      "op": "JUMP"
    },
    "2965": {
      "op": "JUMPDEST"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2970": {
      "op": "DUP3"
    },
    "2971": {
      "op": "DUP5"
    },
    "2972": {
      "op": "SUB"
    },
    "2973": {
      "op": "SLT"
    },
    "2974": {
      "op": "ISZERO"
    },
    "2975": {
      "op": "PUSH2",
      "value": "0xBA7"
    },
    "2978": {
      "op": "JUMPI"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2981": {
      "op": "DUP1"
    },
    "2982": {
      "op": "REVERT"
    },
    "2983": {
      "op": "JUMPDEST"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "op": "MLOAD"
    },
    "2986": {
      "op": "SWAP2"
    },
    "2987": {
      "op": "SWAP1"
    },
    "2988": {
      "op": "POP"
    },
    "2989": {
      "jump": "o",
      "op": "JUMP"
    },
    "2990": {
      "op": "JUMPDEST"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2995": {
      "op": "DUP3"
    },
    "2996": {
      "op": "DUP5"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "op": "SLT"
    },
    "2999": {
      "op": "ISZERO"
    },
    "3000": {
      "op": "PUSH2",
      "value": "0xBC0"
    },
    "3003": {
      "op": "JUMPI"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3006": {
      "op": "DUP1"
    },
    "3007": {
      "op": "REVERT"
    },
    "3008": {
      "op": "JUMPDEST"
    },
    "3009": {
      "op": "DUP2"
    },
    "3010": {
      "op": "MLOAD"
    },
    "3011": {
      "op": "DUP1"
    },
    "3012": {
      "op": "ISZERO"
    },
    "3013": {
      "op": "ISZERO"
    },
    "3014": {
      "op": "DUP2"
    },
    "3015": {
      "op": "EQ"
    },
    "3016": {
      "op": "PUSH2",
      "value": "0xB12"
    },
    "3019": {
      "op": "JUMPI"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3022": {
      "op": "DUP1"
    },
    "3023": {
      "op": "REVERT"
    },
    "3024": {
      "op": "JUMPDEST"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3027": {
      "op": "DUP3"
    },
    "3028": {
      "op": "DUP3"
    },
    "3029": {
      "op": "LT"
    },
    "3030": {
      "op": "ISZERO"
    },
    "3031": {
      "op": "PUSH2",
      "value": "0xBE2"
    },
    "3034": {
      "op": "JUMPI"
    },
    "3035": {
      "op": "PUSH2",
      "value": "0xBE2"
    },
    "3038": {
      "op": "PUSH2",
      "value": "0xB67"
    },
    "3041": {
      "jump": "i",
      "op": "JUMP"
    },
    "3042": {
      "op": "JUMPDEST"
    },
    "3043": {
      "op": "POP"
    },
    "3044": {
      "op": "SUB"
    },
    "3045": {
      "op": "SWAP1"
    },
    "3046": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2a2d569110ab9e8b8589feeb79270b7d3feeec62",
  "source": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"./Math.sol\";\n\ncontract Barter is IERC721Receiver {\n    using Math for uint256;\n\n    // struct for what each person owes, specific to what they bought\n    struct userBorrow {\n        uint256 amountOwed;\n        address buyer;\n        address seller;\n    }\n\n    mapping(address => uint256) totalborrowedETH;\n\n    // mapping: buyer -> NFT Contract => tokenID -> struct(money owed, buyer, seller)\n    mapping(address => mapping(address => mapping(uint256 => userBorrow)))\n        public loanTracker;\n    // will have to handle multiple purchases\n\n    address public constant WETH = 0xc778417E063141139Fce010982780140Aa0cD5Ab;\n\n    address owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    ///@notice function transfers ownership from buyer to seller\n    ///@dev the calling contract/function must approve the transfer to the seller's address\n    function exchangeNFT(\n        address _buyer,\n        address _seller,\n        address _collection,\n        uint256 _tokenID\n    ) public {\n        IERC721(_collection).safeTransferFrom(_buyer, _seller, _tokenID);\n    }\n\n    ///@notice function transfers ownership from buyer to this contract to be held as collateral\n    ///@notice buyer will automaticall receive thier NFT back once they repay the item value\n    ///@dev the calling contract/function must approve the transfer to this contract address\n\n    // backend should check to see if there is enough collateral value, it will also allow user to buy multiple items against one NFT\n    function collateralizedPurchase(\n        address _buyer,\n        address _seller,\n        address _collection,\n        uint256 _tokenID,\n        uint256 _itemValue\n    ) public {\n        //if they purchsed from new seller with same NFT, they must have payed off thier old debts\n        if (loanTracker[_buyer][_collection][_tokenID].seller != _seller) {\n            require(loanTracker[_buyer][_collection][_tokenID].amountOwed == 0);\n        }\n\n        IERC721(_collection).safeTransferFrom(_buyer, address(this), _tokenID);\n\n        loanTracker[_buyer][_collection][_tokenID].amountOwed += _itemValue;\n        totalborrowedETH[_buyer] += _itemValue;\n        loanTracker[_buyer][_collection][_tokenID].seller = _seller;\n        //redundant?\n        loanTracker[_buyer][_collection][_tokenID].buyer = _buyer;\n    }\n\n    ///@notice buyer pays back what they owe in WETH only\n    ///@dev the calling contract/function must approve the transfer of ERC20 to the seller address\n    function repay(\n        address _collection,\n        uint256 _tokenID,\n        uint256 _amount\n    ) public {\n        //require(msg.sender == loanTracker[msg.sender][_collection][_tokenID].buyer);\n        //make sure user has enough WETH\n        require(\n            IERC20(WETH).balanceOf(msg.sender) >= _amount,\n            \"not enough WETH to repay\"\n        );\n        ///could use address _buyer\n        require(\n            loanTracker[msg.sender][_collection][_tokenID].amountOwed >=\n                _amount,\n            \"Cannot pay back more than you owe\"\n        );\n\n        IERC20(WETH).transferFrom(\n            msg.sender,\n            (loanTracker[msg.sender][_collection][_tokenID].seller),\n            _amount\n        );\n\n        loanTracker[msg.sender][_collection][_tokenID].amountOwed -= _amount; //minimum( _amount, loanTracker[_buyer][_collection][_tokenID].amountOwed)\n        totalborrowedETH[msg.sender] -= _amount;\n\n        //send NFT if debt is paid\n        if (loanTracker[msg.sender][_collection][_tokenID].amountOwed == 0) {\n            IERC721(_collection).safeTransferFrom(\n                address(this),\n                msg.sender,\n                _tokenID\n            );\n        }\n    }\n\n    ///@notice upon defualt, the store gets th NFT, and the user no longer owes money.\n    function handleDefault(\n        address _buyer,\n        address _collection,\n        uint256 _tokenID\n    ) public {\n        IERC721(_collection).safeTransferFrom(\n            address(this),\n            loanTracker[_buyer][_collection][_tokenID].seller,\n            _tokenID\n        );\n        loanTracker[_buyer][_collection][_tokenID].amountOwed = 0;\n        //delete mapping? or set buyer/seller to zero address?\n\n        //take after 30 days\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    //_____________________________Helper Functions Begin Here_____________________________//\n\n    function minimum(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a.min(b);\n    }\n\n    ///@notice returns the total eth quantity owed by a user\n    function totalValueBorrowed(address _buyer) public view returns (uint256) {\n        return totalborrowedETH[_buyer];\n    }\n\n    ///@notice returns value owed on 1 NFT used as collateral\n    function valueBorrowedOneNFT(\n        address _buyer,\n        address _collection,\n        uint256 _tokenID\n    ) public view returns (uint256) {\n        return loanTracker[_buyer][_collection][_tokenID].amountOwed;\n    }\n\n    ///@notice returns address of seller who has an NFT as collateral\n    function sellerCollateralNFT(\n        address _buyer,\n        address _collection,\n        uint256 _tokenID\n    ) public view returns (address) {\n        return loanTracker[_buyer][_collection][_tokenID].seller;\n    }\n\n    function emergencyExit(address nft, uint256 _tokenID) public {\n        IERC721(nft).safeTransferFrom(address(this), msg.sender, _tokenID);\n    }\n}\n",
  "sourceMap": "262:5558:4:-:0;;;895:49;;;;;;;;;-1:-1:-1;919:5:4;:18;;-1:-1:-1;;;;;;919:18:4;927:10;919:18;;;262:5558;;;;;;",
  "sourcePath": "contracts/Barter.sol",
  "type": "contract"
}